[{"path":"index.html","id":"about-bioconductor","chapter":"About Bioconductor","heading":"About Bioconductor","text":"Bioconductor provides tools analysis comprehension high-throughput genomic data (Huber et al. 2015).Bioconductor uses  statistical programming language (R Core Team 2021), open source open development. two releases year, active user community.Bioconductor also available Docker images.","code":""},{"path":"develop-overview.html","id":"develop-overview","chapter":"Overview","heading":"Overview","text":"Bioconductor project promotes high-quality, well documented, interoperable software.\nguidelines help achieve objective; meant put undue burden package authors, authors difficultly satisfying guidelines seek advice bioc-devel mailing list.Package maintainers urged follow guidelines closely possible developing Bioconductor packages.General instructions producing packages can found Writing R Extensions manual, available within  (RShowDoc(\"R-exts\")) R web site.Remember minimum requirements package acceptance package still subject guidelines formal technical review trained Bioconductor package reviewer.","code":""},{"path":"package-name.html","id":"package-name","chapter":"1 Package name","heading":"1 Package name","text":"package name match  GitHub\nrepository name case-sensitive. package name descriptive \nalready exist current package (case-insensitive) \nBioconductor \nCRAN.easy way check whether name already use check \nfollowing command fails:addition, avoid package names :easily confused existing package names.Imply temporal (e.g. ExistingPackage2) qualitative\n(e.g. ExistingPackagePlus) relationship.Suggest hate speech, slurs profanity, either implicitly explicitly.Invoke refer historical, ethical, political contexts.Reference well known people, characters, brands, places icons.Also, avoid unwanted meanings foreign languages, name checkers \nwordsafety might used proposed package name.Please consider name package carefully. Bioconductor discourage\nrenaming package acceptance. process renaming package \ndeprecate old named package re-submit newly named package \nreview tracker subject new review.","code":"\nif (!requireNamespace(\"BiocManager\")) {\n  install.packages(\"BiocManager\")\n}\nBiocManager::install(\"MyPackage\")"},{"path":"general.html","id":"general","chapter":"2 General Package Development","heading":"2 General Package Development","text":"","code":""},{"path":"general.html","id":"version-of-bioconductor-and","chapter":"2 General Package Development","heading":"2.1 Version of Bioconductor and ","text":"Package developers always use devel version Bioconductor developing testing packages contributed.Depending  release cycle, using Bioconductor devel may may involve also using devel version .\nSee -using devel version Bioconductor --date information.","code":""},{"path":"general.html","id":"correctness-space-and-time","chapter":"2 General Package Development","heading":"2.2 Correctness, Space and Time","text":"","code":""},{"path":"general.html","id":"r-cmd-build","chapter":"2 General Package Development","heading":"2.2.1 R CMD build","text":"Bioconductor packages must minimally pass R CMD build (R CMD INSTALL --build) pass R CMD check errors warnings using recent R-devel.\nAuthors also try address errors, warnings, notes arise build check.1","code":""},{"path":"general.html","id":"bioccheck","chapter":"2 General Package Development","heading":"2.2.2 BiocCheck","text":"Packages must also pass BiocCheck::BiocCheckGitClone() BiocCheck::BiocCheck() errors warnings.\nBiocCheck package set tests encompass Bioconductor Best Practices.\nEvery effort made address notes arise build check.2","code":""},{"path":"general.html","id":"file-names","chapter":"2 General Package Development","heading":"2.2.3 File names","text":"use filenames differ case, file systems case-sensitive.","code":""},{"path":"general.html","id":"package-size","chapter":"2 General Package Development","heading":"2.2.4 Package size","text":"source package resulting running R CMD build occupy less 5 MB disk.","code":""},{"path":"general.html","id":"check-duration","chapter":"2 General Package Development","heading":"2.2.5 Check duration","text":"package require less 10 minutes run R CMD check ---build-vignettes.\nUsing ---build-vignettes option ensures vignette built .3","code":""},{"path":"general.html","id":"memory","chapter":"2 General Package Development","heading":"2.2.6 Memory","text":"Vignette man page examples use 3 GB memory since  allocate 32-bit Windows.","code":""},{"path":"general.html","id":"individual-file-size","chapter":"2 General Package Development","heading":"2.2.7 Individual file size","text":"software packages, individual files must <= 5MB.\nrestriction exists even package accepted added Bioconductor repository.","code":""},{"path":"general.html","id":"undesirable-files","chapter":"2 General Package Development","heading":"2.2.8 Undesirable files","text":"raw package directory contain unnecessary files, system files, hidden files .DS_Store, .project, .git, cache files, log files, *.Rproj, *., etc.\nfiles may present local directory commited git (see .gitignore).","code":""},{"path":"general.html","id":"r-cmd-check-environment","chapter":"2 General Package Development","heading":"2.3 R CMD check environment","text":"possible activate deactivate number options R CMD build R CMD check.\nOptions can set individual environment variables can listed file.\nDescriptions different options available can found .\nBioconductor chosen customize options incoming submission R CMD check.\nfile utilized flags can downloaded  GitHub.\nfile can either placed default directory directed can set environment variable R_CHECK_ENVIRON command similar :","code":"export R_CHECK_ENVIRON = <path to downloaded file>"},{"path":"general.html","id":"readme-file","chapter":"2 General Package Development","heading":"2.4 README file","text":"README file included package  Github repository provides installation instructions, instruction also include Bioconductor installation instructions.README.Rmd provided (rather README.md, ) installation instructions eval=FALSE code chunk.Nowhere code ( code, man pages, vignettes, Rmd files) someone try install download system dependencies, applications, packages, etc.Developers can provide instructions follow executed assume necessary dependencies, applications, packages already set user’s system.","code":""},{"path":"description.html","id":"description","chapter":"3 The DESCRIPTION file","heading":"3 The DESCRIPTION file","text":"DESCRIPTION file must properly formatted.\nfollowing sections review important notes regarding fields DESCRIPTION file associated files.","code":""},{"path":"description.html","id":"package","chapter":"3 The DESCRIPTION file","heading":"3.1 Package","text":"name package.","code":""},{"path":"description.html","id":"title","chapter":"3 The DESCRIPTION file","heading":"3.2 Title","text":"brief descriptive title package.","code":""},{"path":"description.html","id":"version","chapter":"3 The DESCRIPTION file","heading":"3.3 Version","text":"Bioconductor packages use x.y.z version scheme.\nSee Version Numbering specifics release devel Bioconductor versioning proceeds.\nfirst submitted Bioconductor, package pre-release version 0.99.0.following rules apply:x usually 0 packages yet released.y even packages release, odd packages devel.\nGenerally, bump number especially pre-release.z incremented whenever committing changes package.","code":""},{"path":"description.html","id":"description-1","chapter":"3 The DESCRIPTION file","heading":"3.4 Description","text":"description relatively short detailed overview package functionality entails.\nleast three complete sentences.","code":""},{"path":"description.html","id":"authorsr","chapter":"3 The DESCRIPTION file","heading":"3.5 Authors@R","text":"Authors@R field used.\nmaintainer designation (cre Authors@R) required actively maintained email address.\nemail address used contact regarding issues arise package future.persons ORCiD identifier provide identifier via element named “ORCID” comment argument person().\nexample:one person listed Maintainer ensure single point contact.\nperson default commit access git repository git.bioconductor.org.\nCommit access can given developers request bioc-devel mailing list.Another option add collaborators  GitHub repository.\napproach enables development many restricts push access git.bioconductor.org.","code":"\nperson(\"Lori\", \"Shepherd\",\n  email = Lori.Shepherd@roswellpark.org,\n  role = c(\"cre\", \"aut\"),\n  comment = c(ORCID = \"0000-0002-5910-4010\"))"},{"path":"description.html","id":"license","chapter":"3 The DESCRIPTION file","heading":"3.6 License","text":"license field preferably refer standard license (see wikipedia) using one ’s standard specifications.specific version applies (e.g., GPL-2).\nLicenses restricting use, e.g., academic non-profit researchers, suitable Bioconductor. Core Bioconductor packages typically licensed Artistic-2.0.specify non-standard license, include file named LICENSE package (containing full terms license) use string file LICENSE License: field.package contain code can redistributed according package license.\naware licensing agreements packages depending package.\npackages open source even publicly available.","code":""},{"path":"description.html","id":"lazydata","chapter":"3 The DESCRIPTION file","heading":"3.7 LazyData","text":"packages include data, recommend including LazyData: TRUE.\nHowever, rarely proves good thing.\nexperience slows loading packages large data.","code":""},{"path":"description.html","id":"depends-imports-suggests-enhances","chapter":"3 The DESCRIPTION file","heading":"3.8 Depends, Imports, Suggests, Enhances","text":"packages must available via Bioconductor CRAN; use Remotes: field supported, hence dependencies available repositories (e.g.  GitHub) allowed.Reuse, rather re-implement duplicate, well-tested functionality packages.\nMake use appropriate existing packages (e.g., biomaRt, AnnotationDbi, Biostrings) classes (e.g., SummarizedExperiment, GRanges, Rle, DNAStringSet), avoid duplication functionality available Bioconductor packages.\nSee Common Bioconductor Methods Classes. Bioconductor reviewers strict point!\nNew packages interoperable existing Bioconductor classes reimplement functionality especially regards importing/reading data.package can listed Depends:, Imports:, Suggests:, Enhances:.\nDetermine placement package based following guidelines:Imports: packages provide functions, methods, classes used inside package name space.\npackages listed .Depends: packages provide essential functionality users package, e.g., GenomicRanges package listed Depends: field GenomicAlignments.\nunusual three packages listed Depends:.Suggests: packages used vignettes, examples, conditional code.\nCommonly, annotation experiment packages (e.g., TxDb*) used vignette example code included field thus avoiding costly download.\ncase external one-function required package code, package availability usage can done via:Enhances: packages Rmpi parallel enhance performance package, strictly needed functionality.seldom necessary specify  specific versions dependencies, since Bioconductor release strategy standard installation instructions guarantee constraints.\nRepositories mirrored outside Bioconductor include branches Bioconductor release, may find useful fully specify versions enforce constraints otherwise guaranteed Bioconductor installation practices.","code":"if (!requireNamespace('suggPKG', quietly = TRUE))\n    stop(\"Install 'suggPKG' to use this function.\")\nsuggPKG::function()"},{"path":"description.html","id":"systemrequirements","chapter":"3 The DESCRIPTION file","heading":"3.9 SystemRequirements","text":"field listing external software required, automatically installed normal package installation process.installation process non-trivial, top-level INSTALL file \nincluded document process. user facing README included \nalso recommended document process .","code":""},{"path":"description.html","id":"biocviews","chapter":"3 The DESCRIPTION file","heading":"3.10 biocViews","text":"field required!Specify least two leaf node biocViews.\nMultiple leaf terms encouraged terms must come trunk package type (.e., Software, AnnotationData, ExperimentData, Workflow).","code":""},{"path":"description.html","id":"bugreports","chapter":"3 The DESCRIPTION file","heading":"3.11 BugReports","text":"encouraged include relevant links  GitHub reporting issues.","code":""},{"path":"description.html","id":"url","chapter":"3 The DESCRIPTION file","heading":"3.12 URL","text":"field directs users source code repositories, additional help resources, etc; details provided Writing R Extensions manual, RShowDoc(\"R-exts\").","code":""},{"path":"description.html","id":"video","chapter":"3 The DESCRIPTION file","heading":"3.13 Video","text":"field displays links instructional videos.","code":""},{"path":"description.html","id":"collates","chapter":"3 The DESCRIPTION file","heading":"3.14 Collates","text":"may necessary order class method definitions appropriately package installation.","code":""},{"path":"description.html","id":"bioctype","chapter":"3 The DESCRIPTION file","heading":"3.15 BiocType","text":"required submitting Docker Workflow.\nOtherwise field optionally define type Bioconductor package Software, ExperimentData, Annotation.","code":""},{"path":"biocviews-1.html","id":"biocviews-1","chapter":"4 biocViews","heading":"4 biocViews","text":"Packages added Bioconductor Project require biocViews:\nfield DESCRIPTION file. field name “biocViews” \ncase-sensitive must begin lower-case ‘b.’biocViews terms “keywords” used describe given package. \nbroadly divided three categories, representing type \npackages present Bioconductor Project -SoftwareAnnotation DataExperiment DatabiocViews available release devel branches \nBioconductor. devel branch check box tree\nstructure , checked, displays biocViews defined \nused package, addition biocViews use.","code":""},{"path":"biocviews-1.html","id":"motivation","chapter":"4 biocViews","heading":"4.1 Motivation","text":"One can use biocViews two broad purposes.researcher might want identify packages \nBioconductor Project related specific purpose.\nexample, one may want look packages related “Copy\nNumber Variants.”researcher might want identify packages \nBioconductor Project related specific purpose.\nexample, one may want look packages related “Copy\nNumber Variants.”development, package contributor can “tag” package\nbiocViews someone looking packages (like \nscenario 1) can easily find package.development, package contributor can “tag” package\nbiocViews someone looking packages (like \nscenario 1) can easily find package.","code":""},{"path":"biocviews-1.html","id":"biocviews-during-new-package-development","chapter":"4 biocViews","heading":"4.2 biocViews during new package development","text":"Visit devel branch biocViews process \nadding biocViews new package. Identify many terms \nappropriate hierarchy. Prefer ‘leaf’ terms end \nhierarchy, inclusive terms. Remember check box\ndisplaying available terms.Please Note:package belong one part Bioconductor Project\n(Software, Annotation Data Experiment Data), choose \nbiocViews category.package belong one part Bioconductor Project\n(Software, Annotation Data Experiment Data), choose \nbiocViews category.biocViews listed package must match exactly (e.g.,\nspelling, capitalization) terms biocViews hierarchy.biocViews listed package must match exactly (e.g.,\nspelling, capitalization) terms biocViews hierarchy.submit new package review , package checked\nbuilt Bioconductor Project. check following \nbiocViews:Package contributor added biocViews.Package contributor added biocViews.biocViews valid.biocViews valid.Package contributor added biocViews one categories.Package contributor added biocViews one categories.receive “RECOMMENDED” direction biocViews\nsubmitted package, can try correcting \nfollowing directions given ask package\nreviewer information.","code":""},{"path":"namespace.html","id":"namespace","chapter":"5 The NAMESPACE file","heading":"5 The NAMESPACE file","text":"NAMESPACE file defines functions, classes, methods imported namespace, exported users.following section describe Bioconductor reviewers looking file.","code":""},{"path":"namespace.html","id":"function-names","chapter":"5 The NAMESPACE file","heading":"5.1 Function names","text":"Exported functions use camel case underscoring include ., indicates S3 dispatch.","code":""},{"path":"namespace.html","id":"imported-functions","chapter":"5 The NAMESPACE file","heading":"5.2 Imported functions","text":"Generally importFrom() encouraged importing entire package.\nHowever, many functions single package, import() can acceptable.","code":""},{"path":"namespace.html","id":"exported-functions","chapter":"5 The NAMESPACE file","heading":"5.3 Exported functions","text":"Exporting functions exportPattern(\"^[[:alpha:]]+\") strongly discouraged.\nFunctions generics exported individually, clarity control.","code":""},{"path":"news.html","id":"news","chapter":"6 The NEWS file","heading":"6 The NEWS file","text":"NEWS file included keep track changes code one version next.\ncan top level file inst/ directory.\none NEWS file exist repository.following acceptable locations formats:Specifics formatting can found help page ?news.\nBioconductor uses NEWS file create semi-annual release announcement.\nmust include list elements plain text file.example format:install package, following can run see NEWS properly formatted:output look similar following:get something like following formatting errors need corrected:","code":"Changes in version 0.99.0 (2018-05-15)\n+ Submitted to Bioconductor\n\nChanges in version 1.1.1 (2018-06-15)\n+ Fixed bug. Begin indexing from 1 instead of 2\n+ Made the following significant changes\n  o added a subsetting method\n  o added a new field to database\nutils::news(package=\"<name of your package>\")Changes in version 1.1.1 (2018-06-15):\n\n    o   Fixed bug. Begin indexing from 1 instead of 2\n\n    o   Made the following significant changes\n    o added a subsetting method\n    o added a new field to database\n\nChanges in version 0.99.0 (2018-05-15):\n\n    o   Submitted to BioconductorVersion: 0.99.0\nDate: 2018-05-15\nText: Submitted to Bioconductor\n\nVersion: 1.1.1\nDate: 2018-06-15\nText: Fixed bug. Begin indexing from 1 instead of 2\n\nVersion: 1.1.1\nDate: 2018-06-15\nText: Made the following significant changes o added a subsetting\n    method o added a new field to database"},{"path":"citation.html","id":"citation","chapter":"7 The CITATION file","heading":"7 The CITATION file","text":"Appropriate citations must included help pages (e.g., see also section) vignettes; aspect documentation different scientific endeavor.\nfile inst/CITATION can used specify package cited.\noption utilized, maintainer can check proper formatting CITATION file running readCitationFile(\"inst/CITATION\"); must run without error citation accurately displayed package landing page.Whether CITATION file present, automatically-generated citation appear package landing page Bioconductor web site.\noptimal formatting author names (CITATION file present), specify package author maintainer using Authors@R field described Writing R Extensions manual.","code":""},{"path":"data.html","id":"data","chapter":"8 Package data","heading":"8 Package data","text":"developing software package, excellent practice give comprehensive illustration methods package using existing experiment data package, annotation data data ExperimentHub AnnotationHub, submitting new data resources .existing data available applicable, new smaller dataset needed examples package, data can included either separate data package (larger amounts data) within package (smaller datasets).Bioconductor Build system support git-lfs. current\noption storing large data. Large data sets must included ExperimentHub.","code":""},{"path":"data.html","id":"experiment-data-package","chapter":"8 Package data","heading":"8.1 Experiment Data Package","text":"Experimental data packages contain data specific particular analysis experiment.\noften accompany software package use examples vignettes general updated regularly. need general subset data workflows examples first check AnnotationHub resource available files (e.g., BAM, FASTA, BigWig, etc.).Bioconductor strongly encourages creating \nexperiment data package utilizes ExperimentHub \nAnnotationHub (See Creating Experiment Hub\nPackage\nCreating Annotation Hub\nPackage)\ntraditional package encapsulates data also acceptable.See Package Submission guidelines submitting related packages.","code":""},{"path":"data.html","id":"adding-data-to-existing-package","chapter":"8 Package data","heading":"8.2 Adding Data to Existing Package","text":"Bioconductor strongly encourages use existing datasets, available data can included directly package use examples found man pages, vignettes, tests package.\ngood reference Hadley Wickham data.However, mentioned DESCRIPTION file chapter, Bioconductor encourage using LazyData: True despite recommendataion article.key points summarized following sections.","code":""},{"path":"data.html","id":"exported-data-and-the-data-directory","chapter":"8 Package data","heading":"8.2.1 Exported Data and the data/ directory","text":"Data data/ exported user readily available.\nmade available  session use data().\nrequire documentation concerning creation source information.\noften .RData file created save() types acceptable well, see ?data().Please remember compress data.","code":""},{"path":"data.html","id":"raw-data-and-the-instextdata-directory","chapter":"8 Package data","heading":"8.2.2 Raw Data and the inst/extdata/ directory","text":"often desirable show workflow involves parsing loading raw files.\nBioconductor recommends finding existing raw data already provided another package hubs.However, applicable, raw data files included inst/extdata directory.\nFiles type often accessed utilizing system.file().\nBioconductor requires documentation files inst/script/ directory.","code":""},{"path":"data.html","id":"internal-data","chapter":"8 Package data","heading":"8.2.3 Internal data","text":"Rarely, package may require parsed data used internal exported user.\nR/sysdata.rda often best place include type data.","code":""},{"path":"data.html","id":"other-data","chapter":"8 Package data","heading":"8.2.4 Other data","text":"Downloads files external data web avoided.necessary, minimum files cached.\nSee BiocFileCache Bioconductor recommended package caching files.\nmaintainer creates caching directory, utilize standard\ncaching directories tools::R_user_dir(package, =\"cache\"). \nallowed download write files users home directory working\ndirectory. Files cached stated BiocFileCache (preferred)\nR_user_dir tempdir()/tempfile() files persistent.","code":""},{"path":"docs.html","id":"docs","chapter":"9 Documentation","heading":"9 Documentation","text":"Package documentation important users understand work code.Bioconductor requires:vignette executable code demonstrates use package accomplish task,man pages exported functions runnable examples, well documented data structures especially pre-exiting classwell documented datasets data provided data/ inst/extdata/.References methods used well similar related projects packages also expected.data structures differ similar packages, Bioconductor reviewers expect justification .\nKeep mind always possible extend existing classes.","code":""},{"path":"docs.html","id":"vignettes","chapter":"9 Documentation","heading":"9.1 Vignettes","text":"vignette demonstrates accomplish non-trivial tasks embodying core functionality package. two common types vignettes.Sweave vignette .Rnw file contains \\(\\LaTeX\\) chunks  code.\ncode chunk starts line <<>>=, ends @.\nchunk evaluated R CMD build, prior \\(\\LaTeX\\) compilation PDF document.R markdown vignette similar Sweave vignette, uses markdown instead \\(\\LaTeX\\) structuring text sections resulting HTML output.\nknitr package can process Sweave R markdown vignettes, producing pleasing output.\nRefer Writing package vignettes technical details.\nSee BiocStyle package convenient way use common macros standard style.vignette provides reproducibility: vignette produces results copying corresponding commands  session.\ntherefore essential vignette embed executed  code.\nShortcuts (e.g., using \\(\\LaTeX\\) verbatim environment, using Sweave eval=FALSE flag, equivalent tricks markdown) undermine benefit vignettes generally allowed; exceptions can made proper justification discretion Bioconductor reviewers.packages required least one vignette.\nVignettes go vignettes/ directory package.\nVignettes often used standalone documents, best practices include informative title, primary author vignette, last modification date vignette, link package landing page.\nencourage use BiocStyle formatting.best practices writing Bioconductor vignettes detailed following sections.","code":""},{"path":"docs.html","id":"introduction","chapter":"9 Documentation","heading":"9.1.1 Introduction","text":"Add “Introduction” section serves abstract introduce objective, models, unique functions, key points, etc distinguish package packages area.","code":""},{"path":"docs.html","id":"installation","chapter":"9 Documentation","heading":"9.1.2 Installation","text":"Add “Installation” section show users download load package Bioconductor.instructions installations instructions eval=FALSE code chunk.\ncode ( code, man pages, vignettes, Rmd files) someone try install download system dependencies, applications, packages, etc.\nDevelopers can provide instructions follow unevaluated code chunks, assume necessary dependencies, applications packages already set user’s system.","code":""},{"path":"docs.html","id":"table-of-contents","chapter":"9 Documentation","heading":"9.1.3 Table of contents","text":"appropriate, strongly encourage table contents","code":""},{"path":"docs.html","id":"evaluated-code-chunks","chapter":"9 Documentation","heading":"9.1.4 Evaluated code chunks","text":"Non-trival executable code must!!!Static vignettes acceptable.","code":""},{"path":"docs.html","id":"session-information","chapter":"9 Documentation","heading":"9.1.5 Session information","text":"Include section SessionInfo()","code":""},{"path":"docs.html","id":"vignettes-directory-and-intermediate-files","chapter":"9 Documentation","heading":"9.1.6 vignettes/ directory and intermediate files","text":"source vignette file (.Rnw .Rmd) necessary static images vignette directory.\nintermediate files present.","code":""},{"path":"docs.html","id":"references","chapter":"9 Documentation","heading":"9.1.7 References","text":"Remember include relevant references methods.","code":""},{"path":"docs.html","id":"man-pages","chapter":"9 Documentation","heading":"9.2 Man pages","text":"See Writing R Extensions section man pages detailed instruction format information documenting package, functions, classes, data sets.help pages comprehensive.","code":""},{"path":"docs.html","id":"functions-and-classes","chapter":"9 Documentation","heading":"9.2.1 Functions and classes","text":"exported functions classes need man page.\nMan pages describing new classes must detailed structure type information stored.","code":""},{"path":"docs.html","id":"package-level-documentation","chapter":"9 Documentation","heading":"9.2.2 Package-level documentation","text":"Bioconductor encourages package man page overview package links main functions.","code":""},{"path":"docs.html","id":"data-1","chapter":"9 Documentation","heading":"9.2.3 Data","text":"Data man pages must include provenance information data structure information.","code":""},{"path":"docs.html","id":"examples","chapter":"9 Documentation","heading":"9.2.4 Examples","text":"man pages runnable examples.use donttest dontrun discouraged generally allowed; exceptions can made proper justification discretion Bioconductor reviewers.option used also preferable use donttest instead dontrun; donttest requires valid  code dontrun .","code":""},{"path":"docs.html","id":"the-instscript-directory","chapter":"9 Documentation","heading":"9.3 The inst/script/ directory","text":"scripts directory can vary.importantly data included inst/extdata/ directory, related script must present directory documenting clearly data generated.include source URLs key information regarding filtering processing.can executable code, sudo code, text description.Users able download able roughly reproduce file object present data.","code":""},{"path":"tests.html","id":"tests","chapter":"10 Unit tests","heading":"10 Unit tests","text":"Unit tests simple write, easily invoked, confer large\nbenefits throughout software development process, early stage\nexploratory code, late stage maintenance long-established\nproject. Unit testing often becomes indispensable give\ntry. explain write unit tests, run ,\nwoven standard Bioconductor build process.\nhope unit tests become standard part software\ndevelopment, integral part Bioconductor package.recommend either RUnit testthat packages CRAN write unit\ntests. RUnit R implementation agile software development\n‘XUnit’ tools (see also JUnit, PyUnit) tries encourage, \nrespective language, rapid development robust useful\nsoftware. Testthat also draws inspiration xUnit family testing\npackages, well many innovative ruby testing libraries, like\nrspec, testy,\nbacon \ncucumber.","code":""},{"path":"tests.html","id":"motivation-1","chapter":"10 Unit tests","heading":"10.1 Motivation","text":"bother unit testing?Imagine need function divideBy taking two arguments,\nmight define like :develop function likely test \nvariety ways, using different arguments, checking results,\neventually satisfied performs properly. Unless\nadopt sort software testing protocol, however, tests\nunlikely become integral part code. may \nscattered across different files, may exist re-runnable\ncode file , just ad hoc command-line function calls \nsometimes remember make.far better approach, propose, use lightweight,\nformalized unit testing. requires conventions\npractices:Store test functions standard directory.Use simple functions RUnit testthat packages check results.Run tests routine part development process.RUnit test divideBy:equivalent test suing testthat:Adopting practices cost little. developers\nfind practices simplify shorten development time. \naddition, create executable contract — concise \nverifiable description code supposed . \nexperienced unit-testing programmer create test function\naccompany every function, method class write. (don’t\nlet scare . Even adding single test package \nworthwhile, reasons explained .)Developers often rebel unit tests recommended ,\ncalculating creating unit tests existing code \nlengthy tedious job, productivity suffer.Unit tests, however, best written develop code, rather\npackage written. Replace informal testing\nlightweight formal practices, see \nimmediate long-term productivity increase.Consider every unit software (every function, method, \nclass) designed job, return specific outputs \nspecific inputs, cause specific side effects. unit test\nspecifies behaviors, provides single mechanism — one\ntest functions residing one files, within \nstandard directory structure — ensure target\nfunction, method class job. assurance, \nprogrammer (collaborators) can , confidence, proceed\nuse larger program. bug appears, new features\nneeded added, one adds new tests existing collection.\ncode becomes progressively powerful, robust, yet\nremains easily automatically validated.proponents suggest benefits unit testing extend\n: code design improves. argue \noperational definition function tests encourages\nclean design, ‘separation concerns,’ sensible handling \nedge cases.Finally, unit testing can adopted piecemeal. Add single test\npackage, even test minor feature, \nusers benefit. Add tests go, bugs arise,\nnew features added, find puzzling code\nwrote months . Soon, unit testing part \nstandard practice, package increasingly\ncomplete set tests.","code":"divideBy <- function(dividend, divisor) {\n    if (divisor == 0)\n       return(NA)\n    dividend / divisor\n}test_divideBy <- function() {\n    checkEquals(divideBy(4, 2), 2)\n    checkTrue(is.na(divideBy(4, 0)))\n    checkEqualsNumeric(divideBy(4, 1.2345), 3.24, tolerance=1.0e-4)\n}test_that(\"divideBy works properly\", {\n  expect_equal(divideBy(4, 2), 2)\n  expect_true(is.na(divideBy(4, 0)))\n  expect_equal(divideBy(4, 1.2345), 3.24, tolerance = 1.0e-4)\n})"},{"path":"tests.html","id":"deciding-which-test-framework-to-use","chapter":"10 Unit tests","heading":"10.2 Deciding Which Test Framework To Use","text":"RUnit testthat robust testing solutions great tools \npackage development, choose use package largely comes\npersonal preference. However brief list strengths \nweaknesses .","code":""},{"path":"tests.html","id":"runit-strengths","chapter":"10 Unit tests","heading":"10.2.1 RUnit Strengths","text":"Longer history (first release 2005)Direct analog xUnit projects languages.need learn small set check functions.Used extensively Bioconductor (210 Bioconductor packages, overall 339 circa May 2015), particularly \ncore packages.","code":""},{"path":"tests.html","id":"runit-weaknesses","chapter":"10 Unit tests","heading":"10.2.2 RUnit Weaknesses","text":"RUnit development activity since 2010, active maintainer.Need manually source package test code run interactively.difficult setup run natively (although see\nBiocGenerics:::testPackage() handles ).","code":""},{"path":"tests.html","id":"testthat-strengths","chapter":"10 Unit tests","heading":"10.2.3 Testthat Strengths","text":"Active development 39 contributors.Greater variety test functions available, including partial matching \ncatching errors, warnings messages.Easy setup devtools::use_testthat().Integrates devtools::test() automatically reload package source \nrun tests development.Test failures errors informative RUnit.number different reporting functions available, including visual\nreal-time test results.Used extensively CRAN (546 CRAN packages, overall 598 circa May 2015).","code":""},{"path":"tests.html","id":"testthat-weaknesses","chapter":"10 Unit tests","heading":"10.2.4 Testthat Weaknesses","text":"Test code slightly verbose equivalent RUnit tests.available less time (since 2009).","code":""},{"path":"tests.html","id":"runit-usage","chapter":"10 Unit tests","heading":"10.3 RUnit Usage","text":"","code":""},{"path":"tests.html","id":"adding-tests-for-your-code","chapter":"10 Unit tests","heading":"10.3.1 Adding Tests For Your Code","text":"Three things required:Create file containing functions style test_dividesBy\nfunction want test, using RUnit-provided check\nfunctions.Add small (idiosyncratic) files directories.Make sure RUnit BiocGenerics packages available.Steps two three explained conventions build\nprocess.RUnit check methods:typical test function, can see test_divideBy, \ninvoke one program’s functions methods, call \nappropriate RUnit check function make sure result \ncorrect. RUnit reports failures, , enough\ncontext track error.RUnit can test exception (error) occurs withbut often convenient test specific exceptions, e.g., \nwarning “unusual condition” generated function f <- function() { warning(\"unusual condition\"); 1 } withuse error=... test specific errors.","code":"checkEquals(expression-A, expression-B)\ncheckTrue(condition)\ncheckEqualsNumeric(a, b, tolerance)checkException(expr, msg)obs <- tryCatch(f(), warning=conditionMessage)\ncheckIdentical(\"unusual condition\", obs)"},{"path":"tests.html","id":"conventions-for-the-build-process","chapter":"10 Unit tests","heading":"10.3.2 Conventions for the Build Process","text":"Writing unit tests easy, though Bioconductor package must \nset properly R CMD check MyPackage finds run \ntests. take pains describe exactly things \nset , going behind scenes. (See next\nsection simple technique use \nwant test small part code).standard command R CMD check MyPackage sources runs R\nfiles found MyPackage/tests/ directory. Historically, \nsometimes still, R package developers place test code \ninvention style one files tests directory.RUnit added already-existing structure practice\n2005, additions can confusing, beginning \nindirect way test functions found executed. (\nfollow steps well. Post bioc-devel \nrun difficulty.)two steps:Create file MyPackage/tests/runTests.R contents:\nBiocGenerics:::testPackage(\"MyPackage\")Create file MyPackage/tests/runTests.R contents:Create number files MyPackage/inst/unitTests/ \nunit test functions. can put tests one file \ndirectory, distributed among multiple files. files\nmust follow naming convention specified regular\nexpression:\npattern=\"^test_.*\\\\.R$\"\nexample, therefore, good choice \nMyPackage/inst/unitTests/test_divideBy.R dividesBy\nfunction one several home-brewed arithmetic functions \nwrote, provide tests, descriptive filename\n(practice always recommend) might \nMyPackage/inst/unitTests/test_homeBrewArithmetic.RCreate number files MyPackage/inst/unitTests/ \nunit test functions. can put tests one file \ndirectory, distributed among multiple files. files\nmust follow naming convention specified regular\nexpression:example, therefore, good choice \nMyPackage/inst/unitTests/test_divideBy.R dividesBy\nfunction one several home-brewed arithmetic functions \nwrote, provide tests, descriptive filename\n(practice always recommend) might \nMyPackage/inst/unitTests/test_homeBrewArithmetic.R","code":"BiocGenerics:::testPackage(\"MyPackage\")pattern=\"^test_.*\\\\.R$\""},{"path":"tests.html","id":"using-tests-during-development","chapter":"10 Unit tests","heading":"10.3.3 Using Tests During Development","text":"run tests. developing class, debugging\nmethod function, probably want run just one test \ntime, earlier version package \ninstalled, making local exploratory\nchanges. Assuming followed directory structure naming\nconventions recommended , current working directory \ninst, :failed test reported like :","code":"R CMD check MyPackagelibrary(RUnit)\nlibrary(MyPackage)\n\nsource('../R/divideBy.R')\nsource('unitTests/test_divideBy.R')\ntest_divideBy()\n[1] TRUEError in checkEquals(divideBy(4, 2), 3) : Mean relative difference: 0.5"},{"path":"tests.html","id":"summary-the-minimal-setup","chapter":"10 Unit tests","heading":"10.3.4 Summary: the minimal setup","text":"minimal Bioconductor unitTest setup requires one-line addition \nMyPackage/DESCRIPTION fileand two files, MyPackage/tests/runTests.R:MyPackage/inst/unitTests/test_divideBy.R:Remember unitTests/test_XXXX.R file, files, can \nname(s), long start test_.","code":"Suggests: RUnit, BiocGenericsBiocGenerics:::testPackage(\"MyPackage\")test_divideBy <- function() {\n    checkEquals(divideBy(4, 2), 2)\n    checkTrue(is.na(divideBy(4, 0)))\n    checkEqualsNumeric(divideBy(4, 1.2345), 3.24, tolerance=1.0e-4)\n}"},{"path":"tests.html","id":"testthat-usage","chapter":"10 Unit tests","heading":"10.4 Testthat Usage","text":"Hadley Wickham, primary author testthat comprehensive chapter \nTesting testthat R packages book. also article\ntestthat: Get Started Testing R-Journal.easiest way setup testthat infrastructure package using\ndevtools::use_testthat().can automatically reload code tests re-run using\ndevtools::test().","code":""},{"path":"tests.html","id":"conversion-from-runit-to-testthat","chapter":"10 Unit tests","heading":"10.4.1 Conversion from RUnit to testthat","text":"existing RUnit project like convert using\ntestthat need change following things package\nstructure.devtools::use_testthat() can used setup testthat testing structure.Test files stored tests/testthat rather inst/unitTests \nstart test. Richard Cotton’s\nrunittotesthat package\ncan used programmatically convert RUnit tests testthat format.need add Suggests: testthat DESCRIPTION file rather \nSuggests: RUnit, BiocGenerics.","code":""},{"path":"tests.html","id":"test-coverage","chapter":"10 Unit tests","heading":"10.5 Test Coverage","text":"Test coverage\nrefers percentage package code\ntested unit tests. Packages higher coverage\nlower chance containing bugs.build system calculates test coverage every software\npackage (using covr\npackage) reports results “test coverage” shield\npackage landing page. value shown shield \neither percentage (number 0 100) ‘unknown,’ \nmean:package unit tests, unit tests \nproperly configured. Read page \nbeginning learn add .unit tests package failed.problem calculating test coverage.\nInquire bioc-devel list questions .tests taking long achieve full test coverage, see long\ntests. implementing long tests highly recommend reaching \nbioconductor team mailing list ensure proper use justification.","code":""},{"path":"tests.html","id":"additional-resources","chapter":"10 Unit tests","heading":"10.6 Additional Resources","text":"web resources worth reading:OverviewAn informal accountTest-driven developmentAgile software developmentTesting testthattestthat: Get Started Testing","code":""},{"path":"long-tests.html","id":"long-tests","chapter":"11 Long Tests","heading":"11 Long Tests","text":"","code":""},{"path":"long-tests.html","id":"what-are-they","chapter":"11 Long Tests","heading":"11.1 What are they","text":"Code tests subdirectory Bioconductor software\npackages run R CMD check daily basis part \nBioconductor nightly builds.\nmaximum amount time R CMD check allowed spend\npackage 40 min.Package developers wish implement tests long\nrun context nightly builds can set “long tests” \npackage add package Bioconductor Long Tests builds.","code":""},{"path":"long-tests.html","id":"setup","chapter":"11 Long Tests","heading":"11.2 Setup","text":"4 steps:Put code “long tests” longtests subdirectory \npackage. Like code tests directory, code\ntypically (necessarily) run unit tests.Put code “long tests” longtests subdirectory \npackage. Like code tests directory, code\ntypically (necessarily) run unit tests.Add package Long Tests builds adding .BBSoptions\nfile top-level directory following line :\nRunLongTests: TRUEAdd package Long Tests builds adding .BBSoptions\nfile top-level directory following line :code longtests subdirectory run week\n(every Saturday) part Long Tests builds allowed\nrun maximum 6 hours TIMEOUT raised.code longtests subdirectory run week\n(every Saturday) part Long Tests builds allowed\nrun maximum 6 hours TIMEOUT raised.Check \nlatest Long Tests report BioC devel.\nnext time report updated (normally every Saturday), \npackage included .Check \nlatest Long Tests report BioC devel.\nnext time report updated (normally every Saturday), \npackage included .Note also run Long Tests builds current release\nbranch week (every Saturday). latest report builds\n.","code":"RunLongTests: TRUE"},{"path":"long-tests.html","id":"short-tests-vs-long-tests","chapter":"11 Long Tests","heading":"11.3 “Short tests” vs “long tests”","text":"Long Tests setup forces developers split testing code\npackage “short tests” “long tests.” former go \ntests subdirectory must able run less 40 min (\nlimit actually full R CMD check command runs \npossibly time-consuming things addition code tests).\nlatter go longtests subdirectory must able run\nless 6 hours.Note , unlike “short tests” failures, “long tests” failures don’t\nprevent package propagating version bump. words,\neven package included Long Tests builds, propagation\nstill determined results nightly builds.","code":""},{"path":"long-tests.html","id":"need-help","chapter":"11 Long Tests","heading":"11.4 Need help?","text":"Ask bioc-devel mailing list questions \nneed help Long Tests builds.","code":""},{"path":"r-code.html","id":"r-code","chapter":"12 R code","heading":"12 R code","text":"Everyone coding style formats.\nhowever best practice guidelines \nBioconductor reviewers look (see\ncoding style section )also key points, detailed following sections.","code":""},{"path":"r-code.html","id":"license-1","chapter":"12 R code","heading":"12.1 License","text":"contain code can distributed license specified (see also DESCRIPTION file).","code":""},{"path":"r-code.html","id":"r-cmd-check-and-bioccheck","chapter":"12 R code","heading":"12.2 R CMD check and BiocCheck","text":"Many common coding sytax issues flagged R CMD check BiocCheck() (see R CMD check cheatsheet BiocCheck vignette.prominent offenders:Use vapply() instead sapply(), use various apply functions instead loops.Use seq_len() seq_along() instead 1:....Use TRUE FALSE instead T F.Use numeric indices (rather robust named indices).Use () instead class() == class() !=.Use system2() instead system().use set.seed() internal  code.use browser() internal  code.Avoid use <<-.Avoid use direct slot access @ slot().\nAccessor methods created utilizedUse packages ExperimentHub AnnotationHub instead downloading external data unsanctioned providers  GitHub,  Dropbox, etc.Use <- instead = assigning variables.","code":""},{"path":"r-code.html","id":"formatting-and-syntax","chapter":"12 R code","heading":"12.2.1 Formatting and syntax","text":"Function names camelCase utilize underscore _ \ndot . (indicates S3 dispatch).Use dev.new() start graphics drive necessary. Avoid using x11()\nX11(), can called machines access X\nserver.Use functions message(), warning() error(), instead \ncat() function (except customized show() methods). paste0() \ngenerally used methods except collapsing multiple values\nvariable.","code":""},{"path":"r-code.html","id":"re-use-of-functionality-classes-and-generics","chapter":"12 R code","heading":"12.2.2 Re-use of functionality, classes, and generics","text":"Avoid re-implementing functionality classes (see also\nDESCRIPTION file).\nMake use appropriate existing packages (e.g.,\nbiomaRt,\nAnnotationDbi,\nBiostrings,\nGenomicRanges) classes (e.g.,\nSummarizedExperiment,\nAnnotatedDataFrame,\nGRanges,\nDNAStringSet) avoid duplication functionality\navailable Bioconductor packages.\nSee also Common Bioconductor Methods Classes.encourages interoperability simplifies package development.\nnew representation needed, see Essential S4 interface section Robust Efficient Code.\ngeneral, Bioconductor insist interoperability Common Classes acceptance.Developers make effort re-use generics fit generic\ncontract proposed class-method pair .e., behavior method\naligns originally proposed behavior generic. Specifically,\nbehavior can one return value class across\nmethods. method behavior can also performant conceptual transformation\nprocedure across classes described generic.\nBiocGenerics lists commonly used generics \nBioconductor. One example generic method implementation \nrowSums generic corresponding method within \nDelayedArray package. generic contract returns \nnumeric vector length rows adhered across classes\nincluding DelayedMatrix class. Re-using generics reduces amount \nnew generics consolidating existing operations avoids mistake \nintroducing “new” generic name. Generic name collisions may\nmask masked previous definitions ways hard diagnose.","code":""},{"path":"r-code.html","id":"methods-development","chapter":"12 R code","heading":"12.2.3 Methods development","text":"encourage maintainers create new methods classes exported within\npackages. discourage generation methods external classes,\n.e., classes outside package NAMESPACE. can\npotentially cause method name collisions (.e., two methods defined \nobject different packages) pollute methods environment\nexternal classes. New methods established classes can also cause\nconfusion among users given new method class definition \nseparate packages.","code":""},{"path":"r-code.html","id":"functional-programming","chapter":"12 R code","heading":"12.2.4 Functional programming","text":"Avoid large chunks repeated code. code repeated \ngenerally good indication helper function implemented.","code":""},{"path":"r-code.html","id":"function-length","chapter":"12 R code","heading":"12.2.5 Function length","text":"Excessively long functions also avoided. Write small functions.best function one job needs . \nalso best function job lines code possible.\nfind writing great long functions extend \nscreen, probably take moment split smaller\nhelper functions.Smaller functions easier read, debug reuse.","code":""},{"path":"r-code.html","id":"function-arguments","chapter":"12 R code","heading":"12.2.6 Function arguments","text":"Argument names functions descriptive well documented.\nArguments generally default values. Check arguments \nvalidity check.","code":""},{"path":"r-code.html","id":"vectorization","chapter":"12 R code","heading":"12.2.7 Vectorization","text":"Vectorize!Many R operations performed whole object, just elements \nobject (e.g., sum(x) instead x[1] + x[2] + x[2] + ...). \nparticular, relatively situations require explicit loop.\nSee Vectorize\nsection Robust Efficient Code additional detail.","code":""},{"path":"r-code.html","id":"web-resources","chapter":"12 R code","heading":"12.2.8 Web resources","text":"Follow guiding principles Querying Web Resources, applicable.","code":""},{"path":"r-code.html","id":"parallelisation","chapter":"12 R code","heading":"12.2.9 Parallelisation","text":"parallel implementation please use BiocParallel.\nSee also Parallel Recommendations section Robust Efficient Code.minimal number cores (1 2) set default.","code":""},{"path":"r-code.html","id":"file-caching","chapter":"12 R code","heading":"12.2.10 File caching","text":"Files downloaded cached.\nPlease use BiocFileCache.\nmaintainer creates caching directory, utilize standard\ncaching directories tools::R_user_dir(package, =\"cache\"). \nallowed download write files users home directory working\ndirectory. Files cached stated BiocFileCache (preferred)\nR_user_dir tempdir()/tempfile() files persistent.","code":""},{"path":"r-code.html","id":"additional-files-and-dependencies","chapter":"12 R code","heading":"12.2.11 Additional files and dependencies","text":"install anything users system.System dependencies, applications, additionally needed packages \nassumed already present user’s system.necessary, package maintainers provide instructions download \nsetup, execute instructions behalf user.","code":""},{"path":"r-code.html","id":"coding-style","chapter":"12 R code","heading":"12.3 Coding Style","text":"Using similar coding style helps people understand code. \nguidelines preferences strongly encouraged.","code":""},{"path":"r-code.html","id":"indentation","chapter":"12 R code","heading":"12.3.1 Indentation","text":"Use 4 spaces indenting. tabs.lines longer 80 characters.","code":""},{"path":"r-code.html","id":"variable-names","chapter":"12 R code","heading":"12.3.2 Variable names","text":"Use camelCase: initial lowercase, alternate case words.","code":""},{"path":"r-code.html","id":"function-names-1","chapter":"12 R code","heading":"12.3.3 Function names","text":"Use camelCase: initial lower case, alternate case words.use ‘.’ (S3 class system, (x) x class\ndispatch .).Prefix non-exported functions ‘.’","code":""},{"path":"r-code.html","id":"class-names","chapter":"12 R code","heading":"12.3.4 Class names","text":"Use CamelCaps: initial upper case, alternate case \nwords.","code":""},{"path":"r-code.html","id":"file-names-1","chapter":"12 R code","heading":"12.3.5 File names","text":"Filename extension R code ‘.R.’ Use prefix\n‘methods-’ S4 class methods, e.g., ‘methods-coverage.R.’ Generic\ndefinitions can listed single file, ‘AllGenerics.R,’ \nclass definitions ‘AllClasses.R.’Filename extension man pages ‘.Rd.’","code":""},{"path":"r-code.html","id":"use-of-space","chapter":"12 R code","heading":"12.3.6 Use of space","text":"Always use space comma. : , b, c.space around “=” using named arguments functions. :\nsomefunc(=1, b=2)Space around binary operators: == b.","code":""},{"path":"r-code.html","id":"comments","chapter":"12 R code","heading":"12.3.7 Comments","text":"Use “##” start full-line comments.Indent level surrounding code.","code":""},{"path":"r-code.html","id":"namespaces","chapter":"12 R code","heading":"12.3.8 Namespaces","text":"Import symbols used packages “base.” Except \ndefault packages (base, graphics, stats, etc.) overly\ntedious, fully enumerate imports.Export symbols useful end users. Fully enumerate exports.","code":""},{"path":"r-code.html","id":"end-user-messages","chapter":"12 R code","heading":"12.3.9 End-User messages","text":"message() communicates diagnostic messages (e.g., progress \nlengthy computations) code evaluation.warning() communicates unusual situations handled code.stop() indicates error condition.cat() print() used displaying object \nuser, e.g., show method.","code":""},{"path":"r-code.html","id":"misc","chapter":"12 R code","heading":"12.3.10 Misc","text":"Use <- = assignment.","code":""},{"path":"r-code.html","id":"additonal-references","chapter":"12 R code","heading":"12.3.10.1 Additonal references","text":"Hadley Wickhams’s R Style Guide.Hadley Wickhams’s R Style Guide.formatR \npackage assists formatting.formatR \npackage assists formatting.","code":""},{"path":"common-bioconductor-methods-and-classes.html","id":"common-bioconductor-methods-and-classes","chapter":"13 Common Bioconductor Methods and Classes","heading":"13 Common Bioconductor Methods and Classes","text":"strongly recommend reusing existing methods importing data, \nreusing established classes representing data. \nsuggestions importing different file types commonly used\nBioconductor classes. classes functionality also try\nsearching BiocViews data type.","code":""},{"path":"common-bioconductor-methods-and-classes.html","id":"importing","chapter":"13 Common Bioconductor Methods and Classes","heading":"13.1 Importing","text":"GTF, GFF, BED, BigWig, etc., – rtracklayer::import()VCF – VariantAnnotation::readVcf()SAM / BAM – Rsamtools::scanBam(),\nGenomicAlignments::readGAlignment*()FASTA – Biostrings::readDNAStringSet()FASTQ – ShortRead::readFastq()MS data (XML-based mgf formats) – Spectra::Spectra(),\nMSnbase::readMSData(), Spectra::Spectra(source = MsBackendMgf::MsBackendMgf()),\nMSnbase::readMgfData()","code":""},{"path":"common-bioconductor-methods-and-classes.html","id":"common-classes","chapter":"13 Common Bioconductor Methods and Classes","heading":"13.2 Common Classes","text":"Rectangular feature x sample data –\nSummarizedExperiment::SummarizedExperiment() (RNAseq count\nmatrix, microarray, …)Genomic coordinates – GenomicRanges::GRanges() (1-based,\nclosed interval)Genomic coordinates multiple samples –\nGenomicRanges::GRangesList()Ragged genomic coordinates – RaggedExperiment::RaggedExperiment()DNA / RNA / AA sequences – Biostrings::*StringSet()Gene sets – BiocSet::BiocSet(),\nGSEABase::GeneSet(),\nGSEABase::GeneSetCollection()Multi-omics data –\nMultiAssayExperiment::MultiAssayExperiment()Single cell data –\nSingleCellExperiment::SingleCellExperiment()Mass spec data – Spectra::Spectra(), MSnbase::MSnExp()","code":""},{"path":"robust-and-efficient-code.html","id":"robust-and-efficient-code","chapter":"14 Robust and Efficient Code","heading":"14 Robust and Efficient Code","text":"R can robust, fast efficient programming language, \ncoding practices can unfortunate. suggestions.","code":""},{"path":"robust-and-efficient-code.html","id":"guiding-principles","chapter":"14 Robust and Efficient Code","heading":"14.1 Guiding Principles","text":"primary principle make sure code correct. Use\nidentical() .equal() ensure correctness, \nunit tests ensure consistent results across code revisions.primary principle make sure code correct. Use\nidentical() .equal() ensure correctness, \nunit tests ensure consistent results across code revisions.Write robust code. Avoid efficiencies easily handle\nedge cases 0 length NA values.Write robust code. Avoid efficiencies easily handle\nedge cases 0 length NA values.Know stop trying efficient. code takes \nfraction second evaluate, sense trying \nimprovement. Use system.time() package like\nmicrobenchmark quantify performance gains.Know stop trying efficient. code takes \nfraction second evaluate, sense trying \nimprovement. Use system.time() package like\nmicrobenchmark quantify performance gains.","code":""},{"path":"robust-and-efficient-code.html","id":"common-advice","chapter":"14 Robust and Efficient Code","heading":"14.2 Common Advice","text":"","code":""},{"path":"robust-and-efficient-code.html","id":"vectorize","chapter":"14 Robust and Efficient Code","heading":"14.2.1 Vectorize","text":"Vectorize, rather iterate (loops, lapply(), apply() \ncommon iteration idioms R). single call y <- sqrt(x) \nvector x length n example vectorized function. \ncall y <- sapply(x, sqrt) loop (seq_along(x)) y[] <- sqrt(x[]) iterative version \ncall, avoided. Often, iterative calculations can \nvectorized “hidden” body loopand can ‘hoisted’ loopOften principle can applied repeatedly, iterative\nloop becomes lines vectorized function calls.","code":"for (i in seq_len(n)) {\n    ## ...\n    tmp <- foo(x[i])\n    y <- tmp + ## ...\n}tmp <- foo(x)\nfor (i in seq_len(n)) {\n    ## ...\n    y <- tmp[i] + ##\n}"},{"path":"robust-and-efficient-code.html","id":"pre-allocate-and-fill-if-iterations-are-necessary","chapter":"14 Robust and Efficient Code","heading":"14.2.2 ‘Pre-allocate and fill’ if iterations are necessary","text":"Preallocate--fill (usually via lapply() vapply()) rather\ncopy--append. creating vector list results, use\nlapply() (create list) vapply() (create vector)\nrather loop. instance,manages memory allocation x compactly represents \ntransformation performed. loop might appropriate \niteration side effects (e.g., displaying plot) \ncalculation one value depends previous value. creating \nvector loop, always pre-allocate resultNever adopt strategy ‘copy--append’pattern copies current value x time \nloop, making n^2 / 2 total copies, scale poorly even \ntrivial computations:","code":"n <- 10000\nx <- vapply(seq_len(n), function(i) {\n    ## ...\n}, integer(1))x <- integer(n)\nif (n > 0) x[1] <- 0\nfor (i in seq_len(n - 1)) {\n    ## x[i + 1] <- ...\n}not_this <- function(n) {\n    x <- integer()\n    for (i in seq_len(n))\n        x[i] = i\n    x\n}> system.time(not_this(1000)\n   user  system elapsed\n  0.004   0.000   0.004\n> system.time(not_this(10000))\n   user  system elapsed\n  0.169   0.000   0.168\n> system.time(not_this(100000))\n   user  system elapsed\n 22.827   1.120  23.936"},{"path":"robust-and-efficient-code.html","id":"avoid-1n-style-iterations","chapter":"14 Robust and Efficient Code","heading":"14.2.3 Avoid 1:n style iterations","text":"Write seq_len(n) seq_along(x) rather 1:n \n1:length(x). protects case n length(x)\n0 (often occurs unexpected ‘edge case’ real code) \nnegative.","code":""},{"path":"robust-and-efficient-code.html","id":"re-use-existing-functionality","chapter":"14 Robust and Efficient Code","heading":"14.2.4 Re-use existing functionality","text":"common input formats see common Bioconductor methods classesIf problems, e.g., performance parsing particular\nfile type, ask input developers bioc-devel\nmailing list. Common disadvantages ‘implementing ’ \nintroduction non-standard data representations (e.g., neglecting \ntranslate coordinate systems file formats Bioconductor objects)\nuser bewilderment.","code":""},{"path":"robust-and-efficient-code.html","id":"re-use-existing-classes","chapter":"14 Robust and Efficient Code","heading":"14.2.5 Re-use existing classes","text":"Re-use enhances interoperability Bioconductor packages \nproviding robust code data manipulation.Use GenomicRanges::GRanges (GRangesList) represent 1-based,\nclosed-interval genomic coordinates.Use SummarizedExperiment::SummarizedExperiment (without\nranges row data) coordinate rectangular feature x sample data\n(e.g., RNAseq count matrix) feature sample description. Use\nSummarizedExperiment rather older ExpressionSet,\nespecially sequence data.existing classes see common Bioconductor methods classes","code":""},{"path":"robust-and-efficient-code.html","id":"essential-s4-interface","chapter":"14 Robust and Efficient Code","heading":"14.2.6 Essential S4 interface","text":"Remember re-use common Bioconductor methods classes\nimplementing new representations. encourages\ninteroperability simplifies package development.data requires new representation function, carefully\ndesign S4 class generic package developers \nsimilar needs able re-use hard work, users\nrelated packages able seamlessly use data\nstructures. hesitate ask Bioc-devel mailing list \nadvice.class define, implement use ‘constructor’ object\ncreation. constructor usually plain-old-function (rather ,\ne.g., generic methods). provides documented \nuser-friendly arguments, allowing developer-friendly\nimplementation. Use constructor throughout code,\nexamples, vignette.Implement show() method effectively convey information \nusers without overwhelming detail.Accessors (simple functions return components object)\nrather direct slot access (using @) help isolate \nimplementation class interface. Generally @ \nused accessor, code use \naccessor. accessor need exported class \nuser need business accessing parts data\nobject. Plain-old-functions (rather generic + method) often\nsufficient accessors; ’s often useful employ (consistently) \nlightweight name mangling scheme (e.g., starting accessor method\nname 2 3 letter acronym package) avoid name\ncollisions similarly named functions packages.following layout sometimes used organize classes \nmethods; approaches possible acceptable.class definitions R/AllClasses.RAll generic function definitions R/AllGenerics.RMethods defined file named generic function. \nexample, show methods go R/show-methods.R.Collates: field DESCRIPTION file may necessary order\nclass method definitions appropriately package\ninstallation.","code":""},{"path":"robust-and-efficient-code.html","id":"parallel-recommendations","chapter":"14 Robust and Efficient Code","heading":"14.2.7 Parallel Recommendations","text":"recommend using BiocParallel. provides consistent\ninterface user supports major parallel computing\nstyles: forks processes single computer, ad hoc clusters,\nbatch schedulers cloud computing. default, BiocParallel\nchooses parallel back-end appropriate OS supported\nacross Unix, Mac Windows. Coding requirements BiocParallel\n:Use lapply()-style iteration instead explicit loops.FUN argument bplapply() must self-contained\nfunction; symbols used function default R\npackages, packages require()’ed function, passed \narguments.Allow user specify BiocParallel back-end. \ninvoking bplapply() without specifying BPPARAM; user can\noverride default choice BiocParallel::register().information see BiocParallel vignette.","code":""},{"path":"c-fortran.html","id":"c-fortran","chapter":"15 C and Fortran code","heading":"15 C and Fortran code","text":"package contains C Fortran code, adhere standards methods described System foreign language interfaces section “Writing R Extensions” manual.emphasie particular points following sections.","code":""},{"path":"c-fortran.html","id":"internal-functions","chapter":"15 C and Fortran code","heading":"15.0.1 Internal functions","text":"Use internal  functions, e.g., R_alloc random number generators (RNGs), system-supplied ones.","code":""},{"path":"c-fortran.html","id":"c-function-registration","chapter":"15 C and Fortran code","heading":"15.0.2 C function registration","text":"Use C function registration (See Registering native routines section “Writing R Extensions” manual).","code":""},{"path":"c-fortran.html","id":"checks-for-user-interruption","chapter":"15 C and Fortran code","heading":"15.0.3 Checks for user interruption","text":"Use R_CheckUserInterrupt() C level loops chance may terminate certain parameter settings run time exceeds 10 seconds typical parameter settings, method intended interactive use.","code":""},{"path":"c-fortran.html","id":"makevars","chapter":"15 C and Fortran code","heading":"15.0.4 Makevars","text":"Make judicious use Makevars Makefile files within package.\noften required (See Configure cleanup section “Writing R Extensions” manual).","code":""},{"path":"c-fortran.html","id":"warnings-and-optimizations","chapter":"15 C and Fortran code","heading":"15.0.5 Warnings and optimizations","text":"package development, enable warnings disable optimizations.\nplan use debugger, tell compiler include debugging symbols.easiest way enforce create user-level Makevars file user’s home directory sub-directory called ‘.R’). See examples flags common toolchains.\nConsult section Makevars files Writing R Extensions Manual manual.Example gcc/g++:Example clang/clang++:","code":"CFLAGS=-Wall -Wextra -pedantic -O0 -ggdb\nCXXFLAGS=-Wall -Wextra -pedantic -O0 -ggdb\nFFLAGS=-Wall -Wextra -pedantic -O0 -ggdbCFLAGS=-Weverything -O0 -g\nCXXFLAGS=-Weverything -O0 -g\nFFLAGS=-Wall -Wextra -pedantic -O0 -g"},{"path":"cmavericks-best-practices.html","id":"cmavericks-best-practices","chapter":"16 C++/Mavericks Best Practices","heading":"16 C++/Mavericks Best Practices","text":"guide mostly addresses adapt C/C++ code Bioconductor\npackages build Mac OS X 10.9 (Mavericks). package \nuse C C++ code, can assume document relevant \n.","code":""},{"path":"cmavericks-best-practices.html","id":"table-of-contents-1","chapter":"16 C++/Mavericks Best Practices","heading":"16.1 Table of Contents","text":"document written read beginning end, except \nlast section.Orientation: approach developing \nMavericks.C++11: important info C++11 clang’s standard\nlibrary implementation.Issues specific Mavericks\nenvironment: special considerations \ntools available Mavericks.C++ Best Practices: generally applicable best\npractices C++ Bioconductor packages.Issues code external\nsources: tips using code \nwritten package contributor.Lessons learned specific issues: \nrepository knowledge specific problems.might skip lessons-learned section \ncheck issue already explored.","code":""},{"path":"cmavericks-best-practices.html","id":"orientation","chapter":"16 C++/Mavericks Best Practices","heading":"16.2 Orientation","text":"Note: simplicity, guide uses ‘GCC’ (GNU Compiler Collection)\n‘clang’ refer respective collection tools (including\nC++ compilers), rather simply ‘GCC C compiler’ ‘clang C\ncompiler.’ ‘Mavericks environment’ refers combination clang\nXcode versions available default Mavericks.release Mavericks\nbuild R, CRAN Bioconductor adopted Apple’s preferred\ntoolchain building packages Mavericks\nplatform. Bioconductor packages built Mavericks platform\nusing OS X default combination clang\nXcode.introduction Mavericks environment revealed number \nissues building packages, due C/C++ code\nrelies heavily GCC way things. problems\nrevealed transition Mavericks caused C++ coding\npractices universally recognized problematic, \naddressed adhering established best practices.common sources problems, posed Mavericks\nenvironment contrasts GCC:Undefined behavior. GCC undefined\nbehavior might fail silently without affecting program execution,\nwhereas code Mavericks environment leads \nsegfault (“segmentation fault”).Undefined behavior. GCC undefined\nbehavior might fail silently without affecting program execution,\nwhereas code Mavericks environment leads \nsegfault (“segmentation fault”).Issues related naming, particularly \ncircumventing protections offered C++ namespaces. GCC header\norganization seems forgiving loose naming, whereas \nMavericks environment exacting.Issues related naming, particularly \ncircumventing protections offered C++ namespaces. GCC header\norganization seems forgiving loose naming, whereas \nMavericks environment exacting.C++11 default language specification, clang’s\nlibc++. libc++ implementation \nC++11 standard library written scratch. time \nwriting libc++ implementation available Mac OS X.C++11 default language specification, clang’s\nlibc++. libc++ implementation \nC++11 standard library written scratch. time \nwriting libc++ implementation available Mac OS X.Code written directly package\ncontributor(s). Many Bioconductor\npackages transition well Mavericks environment\ninclude third-party (e.g., Boost) generated (e.g., SWIG)\ncode. Many external code sources make assumptions valid\nMavericks environment. compounded difficulty \ndiagnosing problems code written package author limits\nBioconductor team’s ability help package.Code written directly package\ncontributor(s). Many Bioconductor\npackages transition well Mavericks environment\ninclude third-party (e.g., Boost) generated (e.g., SWIG)\ncode. Many external code sources make assumptions valid\nMavericks environment. compounded difficulty \ndiagnosing problems code written package author limits\nBioconductor team’s ability help package.","code":""},{"path":"cmavericks-best-practices.html","id":"what-is-different-about-developing-for-the-mavericks-environment","chapter":"16 C++/Mavericks Best Practices","heading":"16.2.1 What is different about developing for the Mavericks environment?","text":"biggest change introduction clang’s\nlibc++ implementation C++11 standard\nlibrary library headers associated Xcode. clang \ngaining market share several reasons, helped fact \nclang intended compiler C-based languages. Advocates\nclang hold clang:offers better diagnostic information errors warningshas quicker compilation timessometimes yields smaller binariesin cases yields faster execution speeds (disputed)guidance compiler flags use developing, see \nrelevant section Package Guidelines page.","code":""},{"path":"cmavericks-best-practices.html","id":"differences-in-unspecified-behavior-memory-addressing-policies","chapter":"16 C++/Mavericks Best Practices","heading":"16.2.1.1 Differences in unspecified behavior, memory addressing policies","text":"errors encountered transition seem attributable\nreliance non-portable unspecified behaviors. See section \nguide unspecified behavior \ninformation.example, many aspects C/C++ memory addressing \nimplementation-dependent, means expected behavior \nprescribed C/C++ standard (“unspecified”) therefore \ncompiler writers decide.foremost difference regarding memory clang seems \nrestrictive --bounds memory addressing.","code":""},{"path":"cmavericks-best-practices.html","id":"find-bugs","chapter":"16 C++/Mavericks Best Practices","heading":"16.2.1.2 How to find bugs","text":"GCC preferred debugger \ngdb, many prefer\nlldb debugging Mavericks\nenvironment. Support lldb \nplatforms limited time.number bugs packages related memory addressing\nlayout errors, relying debugger alone might sufficient\ntrack memory errors. Valgrind \npremier tool detecting memory errors.See Bioconductor guide debugging C/C++\ncode examples using \ndebugger Valgrind.","code":""},{"path":"cmavericks-best-practices.html","id":"what-if-i-cannot-access-a-mavericks-machine","chapter":"16 C++/Mavericks Best Practices","heading":"16.2.1.3 What if I cannot access a Mavericks machine?","text":"substitute using Mavericks machine troubleshoot\npackages fail Mavericks. Many errors seen \nreproducible combination clang, Xcode, OS X 10.9.several options short procuring Mavericks machine:exploratory measure, install recent version GCC\ncompile package -std=c++11 -std=gnu++11 compiler\narguments (see Package\nGuidelines\ninfo development compiler flags); version\n4.8.1, GCC implements\nmajor features 2011 ISO C++ standard. Diagnostics \nerrors warnings also greatly improved recent GCC\nversions. Using C++11 implementation might reveal warnings\nerrors point issues encountered Mavericks.exploratory measure, install recent version GCC\ncompile package -std=c++11 -std=gnu++11 compiler\narguments (see Package\nGuidelines\ninfo development compiler flags); version\n4.8.1, GCC implements\nmajor features 2011 ISO C++ standard. Diagnostics \nerrors warnings also greatly improved recent GCC\nversions. Using C++11 implementation might reveal warnings\nerrors point issues encountered Mavericks.Install clang; limited value many errors \nunique Mavericks environment.Install clang; limited value many errors \nunique Mavericks environment.Use Valgrind memory addressing problems; many errors\nMavericks platform related memory addressing problems,\nmany errors equally discoverable using Valgrind Linux.Use Valgrind memory addressing problems; many errors\nMavericks platform related memory addressing problems,\nmany errors equally discoverable using Valgrind Linux.unable diagnose problem using combination \nbuild system output \nValgrind, feel free contact bioc-devel mailing\nlist.unable diagnose problem using combination \nbuild system output \nValgrind, feel free contact bioc-devel mailing\nlist.","code":""},{"path":"cmavericks-best-practices.html","id":"CXX11","chapter":"16 C++/Mavericks Best Practices","heading":"16.3 C++11","text":"Although default version clang Mavericks includes support\nC++11 features, Bioconductor support C++11 dependent \nplatform oldest toolchain. current Snow\nLeopard (Mac OS X 10.6.8) toolchain support C++11\nfeatures, Bioconductor packages generally use C++11\nfeatures. Eventually, Mavericks widely adopted, support\nSnow Leopard dropped.C++11 completely backward-compatible older standards.possible tell clang use older versions standard\nlibrary (default libc++), \nrelying OS version-specific compilation settings workable\nlong-term solution. approach greatly increases maintenance\nburden package authors limits Bioconductor team’s ability\noffer support.insidious catastrophic consequence using non-default\nstandard libraries issue binary incompatibility. Packages\nlinked one standard library liable crash\n(mysteriously) interfacing packages linked \ndifferent standard library. also true programs OS\nlevel: program compiled linked libstdc++ \nMavericks platform , default, assumed incompatible \nprograms compiled linked libc++.Code adapted avoid constructs backward- \nforward-incompatible. See forward-incompatibility\nproblems section examples.","code":""},{"path":"cmavericks-best-practices.html","id":"issues-with-Mavericks-env","chapter":"16 C++/Mavericks Best Practices","heading":"16.4 Issues specific to Mavericks environment","text":"","code":""},{"path":"cmavericks-best-practices.html","id":"c-linkage","chapter":"16 C++/Mavericks Best Practices","heading":"16.4.1 C Linkage","text":"C++ uses extern \"C\" give declarations C linkage, hence make\ndeclarations accessible C code. R headers \n#included C++ include C++ system headers \nC linkage. According relevant Writing R Extensions Manual\nsection,\nR header files included within extern \"C\"\nblocks.typical symptom bad linkage package load time (\ncompilation link time) error says particular symbol \nfound.C++ mangles names, symbol name R says find \noften unrecognizable. Use c++filt program installed \nsystem online name demangler produce human-readable\nversion symbol name. Note mangled names \nenvironment-specific demangler meant GCC symbol names \nLinux demangle clang symbol names Mac.Solution: R headers #included outside extern \"C\" blocks.Example correct #include R headers:","code":"#include <R.h>\nextern \"C\" {\n  void foo(); // function 'foo' and other code in this block has C linkage\n  ...\n}\nextern \"C\" void bar(); // function 'bar' has C linkage"},{"path":"cmavericks-best-practices.html","id":"openmp","chapter":"16 C++/Mavericks Best Practices","heading":"16.4.2 OpenMP","text":"writing Mavericks environment support OpenMP,\nunknown tools released Apple ever .Code rely availability OpenMP. Independent \nconcerns OpenMP support, code written start \ndegrade nicely single-threaded environment.See Writing R Extensions Manual\nsection\ninformation OpenMP code R packages, detecting\nsupport.Solution: use preprocessor -else directives code degrades\ngracefully OpenMP support available:See \nShortRead\npackage example good practices around support OpenMP.","code":"#ifdef SUPPORT_OPENMP\n    // multithreaded OpenMP version of code\n#else\n    // single-threaded version of code\n#endif"},{"path":"cmavericks-best-practices.html","id":"best-practices","chapter":"16 C++/Mavericks Best Practices","heading":"16.5 C++ Best Practices","text":"C++ practices applicable C++ projects, \nidentified Bioconductor community particularly helpful\navoiding issues Mavericks environment.","code":""},{"path":"cmavericks-best-practices.html","id":"use-rcpp","chapter":"16 C++/Mavericks Best Practices","heading":"16.5.1 Use Rcpp","text":"Rcpp\nCRAN package allows seamless integration C++ R, \ncross-platform. package affords many benefits \nR C interface make C++ appealing language, \neliminating many pitfalls programming R interface.package well documented, extensive repository \nworking examples many tasks: Rcpp\nGallery.","code":""},{"path":"cmavericks-best-practices.html","id":"name-resolution-errors","chapter":"16 C++/Mavericks Best Practices","heading":"16.5.2 Avoid name resolution errors","text":"name resolution error occurs compiler encounters \nidentifier (e.g., variable function name) ambiguous (\n, “collision” two identifiers), name\nlookup rules lead compiler resolve name incorrectly. clang \nexacting identifiers.typical symptom name resolution error compiler complains\ntype number arguments function got different \nexpects, compiler points C++ header file \nstandard library.two primary issues name resolution writing R\npackages:","code":""},{"path":"cmavericks-best-practices.html","id":"re-mapping-of-identifiers-from-r-headers","chapter":"16 C++/Mavericks Best Practices","heading":"16.5.2.1 Re-mapping of identifiers from R headers","text":"convenience, R aliases common identifiers R\nheaders. E.g., Rf_length(SEXP) becomes length(SEXP). \nmay convenient C, organization headers \nMavericks environment seems lead collisions \nGCC. See relevant section Writing R Extensions\nManualSolution: prevent re-mapping R identifiers C++ code \ndefining R_NO_REMAP symbol. can done package level\n-DR_NO_REMAP preprocessor flag, file--file basis \n#define R_NO_REMAP. Use fully-qualified versions R identifiers,\nusually prepending Rf_.Example excerpt header file prevents re-mapping:Note Rf_length just one example many R identifiers \nmight conflict names C++ standard library headers.","code":"file CxxCode.h\n------------------\n\n#ifndef CXX_CODE_H\n#define CXX_CODE_H\n#ifdef __cplusplus\n#define R_NO_REMAP\n#endif\n\n...\n\nvoid foo(SEXP s) {\n    if(Rf_length(s) > 1) // fully qualified: 'Rf_length'\n        ...\n}\n\n#endif"},{"path":"cmavericks-best-practices.html","id":"namespace-hygiene","chapter":"16 C++/Mavericks Best Practices","heading":"16.5.2.2 Namespace hygiene","text":"Namespaces introduced C++ limit incidence name\ncollisions. Many authors new C++, however, use\nusing-directives\n(particularly ‘using namespace std’ directive) unnecessarily,\nthereby reintroducing problems namespaces meant solve.pointed cppreference Notes\nsection\nuse using namespace std directive introduces entire\nstd namespace name resolution. high likelihood \namong headers standard library identifier\nconflicts identifiers package.Solution: avoid ‘using namespace std’ directive completely \npossible, especially header files. Prefer\nusing-declarations\nusing-directives simply use fully-qualified versions \nstandard library identifiers. New C++ authors overestimate much\nincluding scope resolution operator (namely ‘std::’) affects\nreadability.Example introducing std namespace identifiers:Many new C++ authors use using-directive introduce \nidentifiers need. Avoid possible:One alternative using-declarations (e.g., ‘using std::map;’\nallow hand-picking identifiers introduce (opposed \nentire std namespace); just want std::map \nstd::make_pair. Even list identifiers want quite\nlong just need single using-declaration one:Using-declarations can also block-scoped. preferred \nusing-declarations global scope, prevents unnecessary\nintroduction names global scope, tenet good namespace\nhygiene:perfectly good alternative simply precede standard library\nidentifiers ‘std::’ C++ programmers accustomed\nreading:","code":"#include <map>\n#include <utility>\n// Suppose we want to access the std::map and std::make_pair identifiersusing namespace std; // introduces entire std namespace for resolutionusing std::map; // 'map' and 'make_pair' introduced at declaration scope\nusing std::make_pair;void foo() {\n     using std::map;\n     using std::make_pair;\n     map<int, int> m;\n     m.insert(make_pair(5, 7));\n     ...\n}void foo() {\n     std::map<int, int> m;\n     m.insert(std::make_pair(5, 7));\n}"},{"path":"cmavericks-best-practices.html","id":"undefined-behavior","chapter":"16 C++/Mavericks Best Practices","heading":"16.5.3 Avoid undefined behavior and non-portable unspecified behavior","text":"two major categories behavior prescribed \nC C++ standards:undefined behavior specified arbitrary; code \nproduces behavior might cause program crash, \nmight execute without complaint (“silently”). effect can also\ndiffer one program execution next. Well-known examples\ninclude division zero, indexing outside array bounds, \ndereferencing null pointer.undefined behavior specified arbitrary; code \nproduces behavior might cause program crash, \nmight execute without complaint (“silently”). effect can also\ndiffer one program execution next. Well-known examples\ninclude division zero, indexing outside array bounds, \ndereferencing null pointer.unspecified behavior consistent documented, decided \nimplementation. behaviors either \nmentioned respective standard, mentioned \nsay implementation-dependent. Well-known examples\ninclude size int type size pointers.unspecified behavior consistent documented, decided \nimplementation. behaviors either \nmentioned respective standard, mentioned \nsay implementation-dependent. Well-known examples\ninclude size int type size pointers.typical symptom problematic undefined unspecified behaviors \nsegfault appears Mavericks environment. reason\nproblem discovered might GCC silently\nallows code execute instead crashing program.Solution: code defensively avoid problematic constructs use\ndebuggers find code leads errors.","code":""},{"path":"cmavericks-best-practices.html","id":"issues-external-code-sources","chapter":"16 C++/Mavericks Best Practices","heading":"16.6 Issues with code from external sources","text":"packages need use code written directly \ncontributor(s). common scenario include source code\nlibrary written third party. packages also use code\nproduced code generation tools, e.g.,\nSWIG. First, see relevant [Package Guidelines\nsection][third-party-libraries] \nguidance code external sources.See lessons learned section guide \nsuggestions specific code sources.","code":""},{"path":"cmavericks-best-practices.html","id":"generated-code","chapter":"16 C++/Mavericks Best Practices","heading":"16.6.1 Generated Code","text":"packages use code generated third-party tools, .e.,\ncode written machines. SWIG common example.problem code written machines code meant \nread machines. top code file produced SWIG, \nexample, states code meant read edited \nhand.many code generation tools make assumptions invalid\nMavericks environment, code needs human attention fix\nerrors; inscrutable nature machine-written code\ndifficult isolate errors.Solution: re-generate problem code possible, otherwise fix \nhand. Fixing hand strongly discouraged.","code":""},{"path":"cmavericks-best-practices.html","id":"third-party-libraries","chapter":"16 C++/Mavericks Best Practices","heading":"16.6.2 Third-party libraries","text":"packages include third-party libraries written \ncompiler-independent way, build ---box \nMavericks environment.Solutions approximate order preference:Check existing CRAN \nBioconductor package provides functionality, meeting\nperformance needs use case. Eliminating third-party\ncode package greatly reduces maintenance burden.Check existing CRAN \nBioconductor package provides functionality, meeting\nperformance needs use case. Eliminating third-party\ncode package greatly reduces maintenance burden.Check library updated. libraries \nactive user community undergo updates add support \ncompilers/environments.Check library updated. libraries \nactive user community undergo updates add support \ncompilers/environments.Check maintainers aware library work \nMavericks environment, find support \nforthcoming. usually easy directly contact authors \nlibraries maintained individual small group.Check maintainers aware library work \nMavericks environment, find support \nforthcoming. usually easy directly contact authors \nlibraries maintained individual small group.Use actively maintained alternate library provides\nequivalent functionality. Sometimes library longer\nmaintained, library abandoned \nalternative project provides functionality.Use actively maintained alternate library provides\nequivalent functionality. Sometimes library longer\nmaintained, library abandoned \nalternative project provides functionality.Update library code included package \nhand. Strongly discouraged. Maintainer assumes responsibility\nkeeping code --date mainline source project. \nundertaken, record descriptions changes needed \ncodebase updated changes can easily reproduced.Update library code included package \nhand. Strongly discouraged. Maintainer assumes responsibility\nkeeping code --date mainline source project. \nundertaken, record descriptions changes needed \ncodebase updated changes can easily reproduced.","code":""},{"path":"cmavericks-best-practices.html","id":"lessons-learned","chapter":"16 C++/Mavericks Best Practices","heading":"16.7 Lessons learned from specific issues","text":"section serves loosely organized repository knowledge\ngained specific problems solutions. expected\ncomprehensive. Items added knowledge base\ngrows. Bioconductor eager suggestions; please write \nbioc-devel mailing list !idea start diagnosing broken package\nmight worthwhile skim section.relevant, issue marked discoverable compile\ntime runtime.applicable, link live code demo provided.","code":""},{"path":"cmavericks-best-practices.html","id":"forward-incompatible","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.1 Forward-incompatibility problems with C++11","text":"C++11 completely backward-compatible. particular, API\nparts standard library changed slightly, \nperhaps subtle ways. issues require minimal tweaking fix.","code":""},{"path":"cmavericks-best-practices.html","id":"container-iterator-const-ness","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.1.1 Container iterator const-ness","text":"Type: compile timeA number operations standard library containers now require\niterators const. Two ready examples \ninsert\nerase\nmethods take iterator parameters.","code":""},{"path":"cmavericks-best-practices.html","id":"iterating-standard-library-containers","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.2 Iterating standard library containers","text":"Type: runtimeGenerally, using special\npast--end\niterator value equality checks (.e., == !=)\nresults undefined behavior. Particularly, Mavericks\nenvironment:Dereferencing iterator past--end value results \nsegfaultIncrementing iterator beyond past--end value results\nsegfaultFor walkthrough example incrementing beyond past--end, see\ndiagnose--crash\nexample \ndebug C/C++ page.","code":""},{"path":"cmavericks-best-practices.html","id":"external-code-sources","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.3 External code sources","text":"Common examples external code sources \nSWIG, Boost, \nnumerous file format libraries. Code external sources \nsometimes written non-compiler-independent way. Check \ndocumentation see Mavericks environment supported.","code":""},{"path":"cmavericks-best-practices.html","id":"boost","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.3.1 Boost","text":"Boost source free, peer-reviewed C++\nlibraries enhance language. Many parts Boost \n“header-,” means need separately compiled\nheaders merely need appear search path order \nclient code use .Many Boost libraries platform-independent, . Boost\nlibraries either process adding Mavericks environment\nsupport, library authors announced Mavericks environment\nsupport added.Solutions approximate order preference:Use BH\npackage CRAN, possible. BH package provides several Boost\nheader-libraries. Using BH package means maintenance\ncost using Boost package virtually nothing.Use BH\npackage CRAN, possible. BH package provides several Boost\nheader-libraries. Using BH package means maintenance\ncost using Boost package virtually nothing.Update Boost libraries include package. Boost\nlibraries sometimes contain bugs, later updated add\nsupport platforms. Bioconductor package\nmaintainer’s responsibility keep code package\nupdated.Update Boost libraries include package. Boost\nlibraries sometimes contain bugs, later updated add\nsupport platforms. Bioconductor package\nmaintainer’s responsibility keep code package\nupdated.Contact authors specific Boost library. \nfind announcement regarding support Mavericks\nenvironment, might worth contacting library authors \ninquire.Contact authors specific Boost library. \nfind announcement regarding support Mavericks\nenvironment, might worth contacting library authors \ninquire.","code":""},{"path":"cmavericks-best-practices.html","id":"swig","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.3.2 SWIG","text":"SWIG generates code interface code written C/C++ \nlanguages. time writing, SWIG support clang\nlimited, SWIG particularly problems clang’s libc++\nversion (C++11) standard library. problems \nlimited issues can addressed tweaking function\nsignatures. problems deeply embedded way SWIG\nproduces code.time writing, thread SWIG-devel mailing\nlist\nseems -depth discussion working SWIG \nMavericks.Solutions approximate order preference:Eliminate SWIG code, possible. probably \nreducing maintenance burden.Eliminate SWIG code, possible. probably \nreducing maintenance burden.Re-generate SWIG code newest version SWIG. time\nwriting SWIG recently updated include partial\nsupport C++11, might alleviate problems clang’s\nlibc++. See SWIG document \nC++11 support. \npossible new version produce problematic\ncode. Note code must valid supported compilers.Re-generate SWIG code newest version SWIG. time\nwriting SWIG recently updated include partial\nsupport C++11, might alleviate problems clang’s\nlibc++. See SWIG document \nC++11 support. \npossible new version produce problematic\ncode. Note code must valid supported compilers.Troubleshoot fix errors hand. Strongly discouraged. \nundertaken, record descriptions changes needed \ncode regenerated changes can easily reproduced.\nRead SWIG documentation find\nguidance troubleshooting. (example, SWIG -E switch\noutputs results preprocessor run.) Perhaps start \nremoving SWIG functionality gradually adding features. Find\ninformation web fix errors \npackage.Troubleshoot fix errors hand. Strongly discouraged. \nundertaken, record descriptions changes needed \ncode regenerated changes can easily reproduced.Read SWIG documentation find\nguidance troubleshooting. (example, SWIG -E switch\noutputs results preprocessor run.) Perhaps start \nremoving SWIG functionality gradually adding features. Find\ninformation web fix errors \npackage.","code":""},{"path":"cmavericks-best-practices.html","id":"f2c","chapter":"16 C++/Mavericks Best Practices","heading":"16.7.3.3 f2c","text":"f2c tool converts Fortran77\ncode C/C++ code. maintenance burden required make f2c code\ncross-platform substantial. Since fortran compiler (emulator)\nrequired install R, f2c usually unnecessary. Several\npackages use native fortran code without problem.Solution: possible, remove need f2c. \nrecourse finesse makefiles point supported\nplatform less targeted makefile. Please write \nbioc-devel mailing list trouble.","code":""},{"path":"debugging-cc-code.html","id":"debugging-cc-code","chapter":"17 Debugging C/C++ code","heading":"17 Debugging C/C++ code","text":"following applies non-Windows operating systems. \nfaint heart, requires C-level familiarity.learn better visually, see video Bioconductor\nalum using gdb debug R packages native code.benefit diagnose--crash Case\nstudy examples steps logic written\n; one need rewind video review steps.","code":""},{"path":"debugging-cc-code.html","id":"set-up","chapter":"17 Debugging C/C++ code","heading":"17.1 Set-up","text":"first, essential, step write short script reliably \nquickly reproduces error. Call script buggy.R.debugging package code C/C++ level, one usually starts \ninstalling package without compiler optimizations, e.g., \nfollowingsection 6.3.3. setting instancein .R/Makevars. See relevant Package Guidelines\nsection examples information.","code":"RShowDoc(\"R-admin\")CFLAGS=-ggdb -O0"},{"path":"debugging-cc-code.html","id":"detecting-memory-errors-valgrind","chapter":"17 Debugging C/C++ code","heading":"17.2 Detecting memory errors (Valgrind)","text":"Valgrind mature suite tools \nlow-level program analysis. Valgrind’s memory error checker\n(Memcheck) \npremier tool diagnosing C/C++ memory errors.Valgrind can used spot memory access problems, \ncommon source segfaults C/C++ code. bug isolated \neasily produced buggy.R, start R :runs quite slowly, flag invalid memory read write\nlocations. former typically contribute bad data, latter \nmemory corruption spectacular failures. output require C\nfamiliarity interpret. helpful run buggy code \npackage installed without compiler optimizations. See\nsection 4.3 RShowDoc(\"R-exts\") relevant Package Guidelines\nsection.","code":"R -d valgrind -f buggy.R"},{"path":"debugging-cc-code.html","id":"interactive-debugging-gdb-or-lldb","chapter":"17 Debugging C/C++ code","heading":"17.3 Interactive debugging (gdb or lldb)","text":"never used command-line debugger, many fine\nquick-start guides web; daunting seems.Linux preferred debugger \ngdb, \nlldb default Mavericks\nplatform. interfaces similar, accustomed \ngdb, see gdb lldb command\nmap.Start R C-level debugger gdb.’ll end gdb promptand typical operation (r)un (c)ontinue executionto run buggy.R. ’ll end back C segfault, \npress cntrl-C (^C, ), ’ve inserted \n(b)reakpoint C-level function suspect buggy, e.g.,end back debugger, can print C variables \nC representation R variables (provided R isn’t confused \npoint)can also view (b)ack(t)race call stack, navigate (u)p \n(d)call stack, etc. Seeand mutual friend Google additional information.","code":"R -d gdb -f buggy.R(gdb)(gdb) r> ^C\n(gdb) b some_buggy_fun\n(gdb) c(gdb) p c_var\n(gdb) call Rf_PrintValue(some_R_variable)(gdb) help"},{"path":"debugging-cc-code.html","id":"diagnose-a-crash","chapter":"17 Debugging C/C++ code","heading":"17.3.1 Finding clues for causes of a program crash","text":"Perhaps useful function debuggers provide \nbreadcrumb trail (“backtrace”) routines led crash\nbuggy program. knowledge can narrow inquiry \ncode affects parts program state relevant time \ncrash.worth reiterating essential optimizations turned\ncompiler instructed include debugging symbols one\nhopes fruitful debugging session. See relevant Package\nGuidelines section.Though debugger output example may differ slightly compared\noutput computing environments, underlying techniques\napply diagnosing program crashes platform. See Case\nstudy real-world example uses Valgrind \ngdb conjunction.use contrived example demonstrate identify\npotential places code cause crash. able \nuse example files exactly appear. extraneous output\nomitted brevity.particular example uses lldb code compiled clang \nMavericks. example lead program crash Linux\nGCC clang.C++ file buggy.cpp:Compile R CMD SHLIB buggy.cpp -o buggy..source()ing file (buggy.R) within R session (entering\ncommands R session) lead program crash:Unfortunately R’s diagnostics illuminating:Now turn debugger. Start R lldb debugger (\nequivalent platform):point R crashes, lldb produces output, back\nlldb prompt. lldb output looks like (showing us \nframe (#0) call stack crash occurred):looks like debugger telling us memory access\nerror fetching tree node. (Trees common underlying data\nstructure standard library map). output voluminous\nlooks confusing, gist important right now.Still lldb session, enter bt command (\n“backtrace”) lldb prompt see stack frames (\nfunction calls) preceded crash. Frames listed \nascending order, starting frame crash\nhappened. (Note frame #0 frame #0 given .)\nmeans diagnosing crash, usually makes sense start\nlower-numbered frames proceed upwards.frame #5 mentions do_dotcall, native function (\nR library) corresponds .Call(\"buggy_function\") line \nbuggy.R call C entry point. can reasonably conclude\nuseful information bug probably frames #0-4.possible chain thought leads right conclusion:frames #0-2 look like dealing tree/map internals;\nignore moment.frames #0-2 look like dealing tree/map internals;\nignore moment.frame #3 indicates probably talking map\nconst_iterator variable declared line #14 buggy.cpp\n(std::map<int,int>::const_iterator = m.begin();).frame #3 indicates probably talking map\nconst_iterator variable declared line #14 buggy.cpp\n(std::map<int,int>::const_iterator = m.begin();).frame #4 key: tells us line (#17) buggy.cpp file\n(++;) execution went C++ code wrote \nmap iterator internals produced error.frame #4 key: tells us line (#17) buggy.cpp file\n(++;) execution went C++ code wrote \nmap iterator internals produced error.Eureka! carefully reading code buggy.cpp realize\ninserts size map m 2. means \nincrementing iterator line #16 (++;), value \nspecial\npast--end\nvalue. Incrementing iterator beyond past--end (third\n++; line #17) undefined\nbehavior!Eureka! carefully reading code buggy.cpp realize\ninserts size map m 2. means \nincrementing iterator line #16 (++;), value \nspecial\npast--end\nvalue. Incrementing iterator beyond past--end (third\n++; line #17) undefined\nbehavior!revise buggy.cpp increment beyond past--end\nremoving third ++; program runs without\ncomplaint. Problem solved!can see, debugger able immediately tell us \nprogram crashed, just program crashed. used \ninformation crash happened home parts \ncode affected program state relevant time \ncrash. Obviously example contrived; real-world scenario\nextra help afforded insight relevant program state \ninvaluable.","code":"#include <map>\n#include <utility>\n#ifdef __cplusplus\n#define R_NO_REMAP\n#endif\n#include <Rdefines.h>\n\nextern \"C\" SEXP buggy_function();\n\nSEXP buggy_function() {\n    std::map<int, int> m;\n    m.insert(std::make_pair(5, 7));\n    m.insert(std::make_pair(9, 42));\n    std::map<int,int>::const_iterator it = m.begin();\n    ++it;\n    ++it;\n    ++it;\n\n    return R_NilValue;\n}dyn.load(\"buggy.so\")\n.Call(\"buggy_function\")> source(\"buggy.R\")\n\n *** caught segfault ***\naddress 0x2, cause 'memory not mapped'\n\nTraceback:\n 1: .Call(\"buggy_function\")\n 2: eval(expr, envir, enclos)\n 3: eval(ei, envir)\n 4: withVisible(eval(ei, envir))\n 5: source(\"buggy.R\")R -d lldb\n(lldb) run\n## R startup messages elided\n## now in R session\n> source(\"buggy.R\")Process 21657 stopped\n* thread #1: tid = 0xbcb4ab, 0x00000001028fcbb0 buggy.so`buggy_function [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_min<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) at __tree:134, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x2)\n    frame #0: 0x00000001028fcbb0 buggy.so`buggy_function [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_min<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) at __tree:134\n   131  _NodePtr\n   132  __tree_min(_NodePtr __x) _NOEXCEPT\n   133  {\n-> 134      while (__x->__left_ != nullptr)\n   135          __x = __x->__left_;\n   136      return __x;\n   137  }(lldb) bt\n* thread #1: tid = 0xbcb4ab, 0x00000001028fcbb0 buggy.so`buggy_function [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_min<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) at __tree:134, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x2)\n  * frame #0: 0x00000001028fcbb0 buggy.so`buggy_function [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_min<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) at __tree:134\n    frame #1: 0x00000001028fcbb0 buggy.so`buggy_function [inlined] std::__1::__tree_node_base<void*>* std::__1::__tree_next<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*) + 20 at __tree:158\n    frame #2: 0x00000001028fcb9c buggy.so`buggy_function [inlined] std::__1::__tree_const_iterator<std::__1::__value_type<int, int>, std::__1::__tree_node<std::__1::__value_type<int, int>, void*>*, long>::operator++() at __tree:747\n    frame #3: 0x00000001028fcb9c buggy.so`buggy_function [inlined] std::__1::__map_const_iterator<std::__1::__tree_const_iterator<std::__1::__value_type<int, int>, std::__1::__tree_node<std::__1::__value_type<int, int>, void*>*, long> >::operator++() at map:750\n    frame #4: 0x00000001028fcb9c buggy.so`buggy_function + 188 at buggy.cpp:17\n    frame #5: 0x0000000100073a13 libR.dylib`do_dotcall(call=<unavailable>, op=<unavailable>, args=<unavailable>, env=<unavailable>) + 323 at dotcode.c:578"},{"path":"debugging-cc-code.html","id":"case-study","chapter":"17 Debugging C/C++ code","heading":"17.4 Case study","text":"case study, colleague reported complicated program\n, one particular computer, produce segmentation fault \njust stop responding. series actions wouldn’t cause\nproblems computers. sounds like classic memory\nproblem, segfault difficulty reproduction.first advice develop simple script reproduced \nproblem: original report many moving parts. big insight\nbug produced running part code \nuses RCurl, followed call garbage collector, gc(). \nrole garbage collector suggests memory corruption \nsort, particular perhaps RCurl allocating (C\nlevel) R object properly PROTECT’ing garbage\ncollection. suspect RCurl rather R libcurl (possible\nplayers) least tested code. \nwrong, course… many iterations, colleague arrived \nbuggy24.R:pretty simple, doesn’t require access special\nresources (like server originally queried). \nscript doesn’t cause segfault run systems, running\nvalgrind (installed RCurl without optimizations) shows…Look around C source code RCurl’s curl.c, suggested \nbacktrace, just get oriented. doto run script gdb. Run test scriptNo error. Don’t give , set break pointand run againThat ‘file’ means gdb doesn’t know find \nRCurl package src/ directory, tell (l)ist context, \n(p)rint value C variable isProtected, seems \nsource valgrind warningisProtected value (!), furthermore value \nFALSE results PROTECT’ing object el across C calls (\nR_PreserveObject ). pretty interesting, \n’re aware garbage collection triggers segfault. valgrind \ntelling us value isProtected isn’t actually result\nassignment, result accessing array \nbounds. Let’s head call stack see value \ncoming fromWe’re entering function getCurlPointerForData value\nLOGICAL(isProtected)[ % n ]. , isProtected now R\nobject, C variable. Looking surrounding code, % n doesn’t look right – ’s probably meant recycle isProtected\ncase shorter logical variable provided \nvector elements requiring protection, value n \nnecessarily length isProtected. Let’s look \n’ve got, using C-level R function Rf_PrintValue print R\nvalues (SEXP’s) R fashionisProtected logical vector length 1.…’re trying access element 1 . C\nrepresentation R vectors zero-based, valid value \nindex 0 – ’re bounds! well bug, \n’s time try fixing (naively,\nLOGICAL(isProtected)[ % LENGTH(isProtected) ]) confirm \ndiagnosis, report packageDescription(\"RCurl\")$Maintainer\nmight better sense overall structure intention\ncode.","code":"\nlibrary(RCurl)\n\nfoo <- function() {\n    url <- \"https://google.com\"\n    curl <- getCurlHandle()\n    opts <- list(followlocation=NULL, ssl.verifypeer=TRUE)\n    d <- debugGatherer()\n    getURL(url,customrequest=\"GET\",curl=curl,debugfunction=d$update,.opts=opts)\n}\n\nexecute <- function() {\n    foo()\n    gc()\n}\n\nexecute()> R -d valgrind -f buggy24.R\n...\n==10859== Conditional jump or move depends on uninitialised value(s)\n==10859==    at 0x11BF00F6: getCurlPointerForData (curl.c:798)\n==10859==    by 0x11BF0E80: R_curl_easy_setopt (curl.c:164)\n==10859==    by 0x11BF17AD: R_curl_easy_perform (curl.c:89)\n==10859==    by 0x4ED5499: do_dotcall (dotcode.c:588)\n==10859==    by 0x4F1CAA4: Rf_eval (eval.c:593)\n==10859==    by 0x4F2BD5C: do_set (eval.c:1828)\n==10859==    by 0x4F1C8B7: Rf_eval (eval.c:567)\n==10859==    by 0x4F2B957: do_begin (eval.c:1514)\n==10859==    by 0x4F1C8B7: Rf_eval (eval.c:567)\n==10859==    by 0x4F297E9: Rf_applyClosure (eval.c:960)\n==10859==    by 0x4F1CBA5: Rf_eval (eval.c:611)\n==10859==    by 0x4F2BD5C: do_set (eval.c:1828)R -d gdb -f buggy24.R(gdb) r(gdb) b curl.c:798(gdb) r\nBreakpoint 1, getCurlPointerForData (el=0x79e038,\n    option=CURLOPT_WRITEFUNCTION, isProtected=FALSE, curl=0x1d9bdc0)\n    at curl.c:798\n798    curl.c: No such file or directory.\n(gdb)(gdb) dir ~/tmp/RCurl/src\n(gdb) l\n793                        }\n794                    }\n795                }\n796                break;\n797              case CLOSXP:\n798              (gdb) l\n793                        }\n794                    }\n795                }\n796                break;\n797              case CLOSXP:\n798                  if(!isProtected) {\n799                R_PreserveObject(el);\n800                }\n801                ptr = (void *) el;\n802                break;\n(gdb) p isProtected\n$5 = FALSE(gdb) up\n#1  0x00007ffff426e273 in R_curl_easy_setopt (handle=0x15d9600,\n    values=0x1445788, opts=0xf3d418, isProtected=0xb7d308, encoding=0x776db0)\n    at curl.c:164\n164            val = getCurlPointerForData(el, opt, LOGICAL(isProtected)[ i % n ], obj);\n(gdb) l\n159        /* Loop over all the options we are setting. */\n160        for(i = 0; i < n; i++) {\n161            opt = INTEGER(opts)[i];\n162            el = VECTOR_ELT(values, i);\n163                 /* Turn the R value into something we can use in libcurl. */\n164            val = getCurlPointerForData(el, opt, LOGICAL(isProtected)[ i % n ], obj);\n165\n166                    if(opt == CURLOPT_WRITEFUNCTION && TYPEOF(el) == CLOSXP) {\n167                data->fun = val; useData++;\n168                status =  curl_easy_setopt(obj, CURLOPT_WRITEFUNCTION, &R_curl_write_data);\n(gdb)(gdb) p isProtected\n$1 = (SEXP) 0xaad8a0\n(gdb) call Rf_PrintValue(isProtected )\n[1] FALSE(gdb) p i\n$7 = 1\n(gdb) p n\n$8 = 6\n(gdb) p i % n\n$9 = 1"},{"path":"querying-web-resources.html","id":"querying-web-resources","chapter":"18 Querying Web Resources","heading":"18 Querying Web Resources","text":"Packages rely access web resources need written\ncarefully. Web resources can change location, can temporarily\nunavailable, can slow access retrieve. Functions\nquery web resources, anticipate handle situations\ngracefully – failing quickly clearly resource \navailable reasonable time frame. avoidable problems seen \nBioconductor package code include infinite loops, use \navailable R connections, unclear error messages.","code":""},{"path":"querying-web-resources.html","id":"guiding-principles-1","chapter":"18 Querying Web Resources","heading":"18.1 Guiding Principles","text":"Remember Bioconductor packages built nightly across multiple\noperating systems, users benefit easy--run vignettes\nexamples.Download files reasonable size. Use system.time() estimate \ndownload time. Remember package require less 5 minutes \nrun R CMD check ---build-vignettes.Download files reasonable size. Use system.time() estimate \ndownload time. Remember package require less 5 minutes \nrun R CMD check ---build-vignettes.Set limit number times function tries URL. Avoid\n() statements guaranteed termination. \nbecome infinite loops eventually result build-system TIMEOUTs.Set limit number times function tries URL. Avoid\n() statements guaranteed termination. \nbecome infinite loops eventually result build-system TIMEOUTs.Supply informative error message.Supply informative error message.","code":""},{"path":"querying-web-resources.html","id":"template-for-resource-queries","chapter":"18 Querying Web Resources","heading":"18.2 Template for Resource Queries","text":"function can serve template appropriate resource\nretrieval. tries retrieve resource one several times \nfailing, takes arguments:URL, resource queried, typically character(1) \nurl().FUN, function used query resource. Examples might\ninclude readLines(), download.file(), httr::GET(),\nRCurl::getURL()....: additional arguments used FUN.N.TRIES: number times URL attempted; \nexceptional circumstances might differ default value.return value retrieved resource. resource retrieval\nfails, function indicates failure, including condition\n(error) message last attempt. Warnings propagate user \nnormal way.Base R functions using url() connections respect\ngetOption(\"timeout\"); see ?url details.FUN might implemented retrieve resource test \nstatus, e.g.,","code":"getURL <- function(URL, FUN, ..., N.TRIES=1L) {\n    N.TRIES <- as.integer(N.TRIES)\n    stopifnot(length(N.TRIES) == 1L, !is.na(N.TRIES))\n\n    while (N.TRIES > 0L) {\n        result <- tryCatch(FUN(URL, ...), error=identity)\n        if (!inherits(result, \"error\"))\n            break\n        N.TRIES <- N.TRIES - 1L\n    }\n\n    if (N.TRIES == 0L) {\n        stop(\"'getURL()' failed:\",\n             \"\\n  URL: \", URL,\n             \"\\n  error: \", conditionMessage(result))\n    }\n\n    result\n}FUN <- function(URL, ...) {\n    response <- httr::GET(URL, timeout(getOption(\"timeout\")), ...)\n    stop_for_status(response)\n    response\n}"},{"path":"third-party-code.html","id":"third-party-code","chapter":"19 Third-party code","heading":"19 Third-party code","text":"Use external libraries whose functionality redundant libraries\nalready supported strongly discouraged. cases external library\ncomplex, author may need supply pre-built binary versions \nplatforms.including third-party code package maintainer assumes responsibility \nmaintenance code. Part maintenance responsibility includes\nkeeping code date bug fixes updates released \nmainline third-party project.guidance including code specific third-party sources, see \nexternal code sources section C++ Best Practices guide.","code":""},{"path":"shiny.html","id":"shiny","chapter":"20 Shiny apps","heading":"20 Shiny apps","text":"Shiny apps allowable.Please relevant  code main R/ directory package.bulk package code implemented within Shiny app directly.","code":""},{"path":"non-software.html","id":"non-software","chapter":"21 Non-Software Packages","heading":"21 Non-Software Packages","text":"packages contributed users software packages. However, \ninstances package types submitted. following sections \ngo specifics look non-software type packages.","code":""},{"path":"non-software.html","id":"annotation-and-experiment-data-packages","chapter":"21 Non-Software Packages","heading":"21.1 Annotation and Experiment data packages","text":"Annotation packages database-like packages provide information linking\nidentifies (e.g., Entrez gene names Affymetrix probe ids) \ninformation (e.g., chromosomal location, Gene Ontology category).Experiment data packages provide data sets used, often software\npackages, illustrate particular analyses. packages contain curated\ndata experiment, teaching course publication cases\ncontain single data set.look similar requirements software packages, importantly \nproper documentation data included within package.","code":""},{"path":"non-software.html","id":"annotationexperiment-hub-packages","chapter":"21 Non-Software Packages","heading":"21.2 Annotation/Experiment Hub packages","text":"light weight packages related resources added AnnotationHub \nExperimentHub. package minimally contain resource metadata, man\npages describing resources, vignette. may also contain supporting\nR function author wants provide. packages similar \nAnnotation Experiment data packages except data stored AWS S3\nbuckets publicly accessibly sites instead package .information creating hub packages well contents\n“Creating Hub Package” vignette within HubPub Bioconductor\npackage.","code":""},{"path":"non-software.html","id":"workflow-packages","chapter":"21 Non-Software Packages","heading":"21.3 Workflow packages","text":"Workflow packages contain vignettes describe bioinformatics workflow\ninvolves multiple Bioconductor packages. vignettes usually \nextensive vignettes accompany software packages. packages \nneed man/ R/ directories data/ directory ideally\nworkflows make use existing data Bioconductor package.","code":""},{"path":"package-end-of-life-policy.html","id":"package-end-of-life-policy","chapter":"22 Package End of Life Policy","heading":"22 Package End of Life Policy","text":"Bioconductor project strives provide software repository \nstable relevant users across community. year 100-150 new\nsoftware packages added repository; Spring 2021 2000\npackages hosted. Bioconductor Build System (BBS) installs, builds, \nchecks software package every 24 hours. Regular execution example,\nvignette, unit test code ensures package operating expected \nrequired dependencies available. \nbuild system\nprovides detailed report package across three platforms: Linux,\nWindows, Mac.effort maintain high quality repository adopted \none-year end life (EOL) process packages longer pass\nbuild check active maintainer. Packages \nassessed EOL deprecation prior Bioconductor release; \nEOL policies apply software, annotation, workflow, experiment data\npackages.","code":""},{"path":"package-end-of-life-policy.html","id":"criteria-for-package-deprecation-by-core-team","chapter":"22 Package End of Life Policy","heading":"22.1 Criteria for package deprecation by Core Team","text":"R CMD build check errors one platforms\npackage must build check without error platforms\n(exceptions cross-platform builds available limited\ncircumstances) Bioconductor release. efforts \nmade keep package repository maintainer \nactively attempting fix.\npackage broken extended period time maintainer \ngiven final 2 week notice. package fixed end\n2 weeks, End Life started.R CMD build check errors one platformsThe package must build check without error platforms\n(exceptions cross-platform builds available limited\ncircumstances) Bioconductor release. efforts \nmade keep package repository maintainer \nactively attempting fix.package broken extended period time maintainer \ngiven final 2 week notice. package fixed end\n2 weeks, End Life started.Inactive maintainer\nmaintainer listed DESCRIPTION file must responsive \nquestions support site, package-related email users \nBioconductor team members, package-related errors build\nsystem, requests bug fixes. email DESCRIPTION must also\nremain valid, active email.Inactive maintainerThe maintainer listed DESCRIPTION file must responsive \nquestions support site, package-related email users \nBioconductor team members, package-related errors build\nsystem, requests bug fixes. email DESCRIPTION must also\nremain valid, active email.","code":""},{"path":"package-end-of-life-policy.html","id":"user-requested-deprecation","chapter":"22 Package End of Life Policy","heading":"22.2 User Requested Deprecation","text":"Alternatively, package maintainer may request package deprecation. \nmaintainer may number reasons deprecating package. \ncommon reasons:longer wish maintain packageThey longer wish maintain packageThe package superseded though packagesThe package superseded though packagesThe package material become -dated makes sense retire \npackage.package material become -dated makes sense retire \npackage.ask maintainers wishing deprecate package send email\nnotification bioc-devel@r-project.org. core team ensure \nnecessary steps notifications can occur.","code":""},{"path":"package-end-of-life-policy.html","id":"end-of-life-process","chapter":"22 Package End of Life Policy","heading":"22.3 End of Life process","text":"Step : DeprecationPackages deprecated marked deprecation warning \npackage name strikethrough build report. warning \nemitted package loaded, reported package ‘landing\npage.’ message alerts users package currently fails minimal\nbuild check criteria, package likely removed \nBioconductor next release.time 6 month period required criteria met (e.g., \npackage returns active maintenance, perhaps ‘adoption’ third\nparty) warning removed.Step II: DefunctWhen package gone one development cycle ‘deprecated’ without\nremedial action, package marked ‘Defunct.’ package removed\nnightly build system, longer available \n‘BiocManager::install(),’ current ‘landing page.’package remains available git archive, previous\nversions Bioconductor.Defunct packages re-enter Bioconductor repository except \nreview ‘new package.’Example:package identified deprecation Bioconductor release 3.2 /\ndevel 3.3 make following transitions:","code":"- deprecate in devel 3.3\n** Bioc Release **\n- deprecate in release 3.3 (i.e., no change in release status)\n- defunct in devel 3.4\n** Bioc Release **\n- defunct in release 3.4\n- gone in devel 3.5\n** Bioc Release **\n- gone in release 3.5"},{"path":"package-end-of-life-policy.html","id":"implementation-detail","chapter":"22 Package End of Life Policy","heading":"22.4 Implementation detail","text":"Notify bioc-devel mailing list maintainers packages\nDepending, Importing, Suggesting package package\ndeprecated. appropriate, indicate new maintainer\nwelcome take .Notify bioc-devel mailing list maintainers packages\nDepending, Importing, Suggesting package package\ndeprecated. appropriate, indicate new maintainer\nwelcome take .Add following code chunk ‘devel’ version package\nfile R/zzz.R, adjusting Bioconductor version \nversion current devel version.\n.onAttach <- function(libname, pkgname) {\n    msg <- sprintf(\n        \"Package '%s' deprecated removed Bioconductor\n         version %s\", pkgname, \"3.4\")\n    .Deprecated(msg=paste(strwrap(msg, exdent=2), collapse=\"\\n\"))\n}Add following code chunk ‘devel’ version package\nfile R/zzz.R, adjusting Bioconductor version \nversion current devel version.Add following annotation package DESCRIPTION file.\nPackageStatus: DeprecatedAdd following annotation package DESCRIPTION file.PackageStatus: DeprecatedThe package remains deprecated ‘devel’ branch 6\nmonths, time Bioconductor core\nteam members remove package ‘devel’ package manifest.package remains deprecated ‘devel’ branch 6\nmonths, time Bioconductor core\nteam members remove package ‘devel’ package manifest.","code":".onAttach <- function(libname, pkgname) {\n    msg <- sprintf(\n        \"Package '%s' is deprecated and will be removed from Bioconductor\n         version %s\", pkgname, \"3.4\")\n    .Deprecated(msg=paste(strwrap(msg, exdent=2), collapse=\"\\n\"))\n}"},{"path":"package-end-of-life-policy.html","id":"reversing-end-of-life-status","chapter":"22 Package End of Life Policy","heading":"22.5 Reversing End of Life Status","text":"deprecated package can un-deprecated removed End Life\nprocess fixed next Bioconductor release. \npackage un-deprecated, please contact maintainer@bioconductor.org. package\nalready defunct stage; package mostly likely requested \ngo new package submission process .","code":""},{"path":"package-end-of-life-policy.html","id":"orphaned-packages","chapter":"22 Package End of Life Policy","heading":"22.6 ‘Orphaned’ packages","text":"‘orphaned’ package Bioconductor package inactive \nnon-responsive maintainer. described , Bioconductor makes multiple\nefforts reach package maintainers fix broken packages. \nresponse maintainer emails sent core team, \npackage considered ‘orphaned.’ Occasionally, members Bioconductor\ncommunity reach take maintenance ‘orphaned’ package. \ninterested replacement maintainer asked email original maintainer \nmaintainer@bioconductor.org, formally request permission take . Unless\nexplicit request package retired, Bioconductor \ngrant access interested replacement maintainer accordance open\nsource software licenses Bioconductor packages require package naming\npolicy maintainers agree upon submission.","code":""},{"path":"gitignore.html","id":"gitignore","chapter":"23 The .gitignore file","heading":"23 The .gitignore file","text":"Bioconductor requires Git repository submission.certain system files tracked repository unacceptable include.\nfiles can remain local system excluded Git repository possible including .gitignore file.following files checked Bioconductor flagged unacceptable:","code":"\nhidden_file_ext = c(\n    \".renviron\", \".rprofile\", \".rproj\", \".rproj.user\", \".rhistory\",\n    \".rapp.history\", \".o\", \".sl\", \".so\", \".dylib\", \".a\", \".dll\",\n    \".def\", \".ds_store\", \"unsrturl.bst\", \".log\", \".aux\", \".backups\",\n    \".cproject\", \".directory\", \".dropbox\", \".exrc\", \".gdb.history\",\n    \".gitattributes\", \".gitmodules\", \".hgtags\", \".project\", \".seed\",\n    \".settings\", \".tm_properties\"\n)"},{"path":"conclusion.html","id":"conclusion","chapter":"24 Conclusion","heading":"24 Conclusion","text":"exercise Build Bioconductor Package RStudio may also helpful.Remember every Bioconductor package goes formal review process may still receive technical feedback assigned Bioconductor reviewer.overview submission process may found package may submitted GitHub package submission repository.Thank reading guidelines, welcome Bioconductor community users developers!","code":""},{"path":"references-1.html","id":"references-1","chapter":"References","heading":"References","text":"","code":""},{"path":"reviewer-resources-overview.html","id":"reviewer-resources-overview","chapter":"Overview","heading":"Overview","text":"following sections contain resources package reviewers \ninterested becoming package reviewers. find reviewer expectations,\nuseful tools, volunteer community reviewer.also encourage communication conversation package review \ncommunity addition assigned reviewers: Packages Review. \npackage reviews publicly accessible, therefore feedback interactions \nsubmitted packages must abide Bioconductor Code Conduct.","code":""},{"path":"review-expectation.html","id":"review-expectation","chapter":"25 Review Expectations","heading":"25 Review Expectations","text":"Anyone Bioconductor community package Bioconductor can\nvolunteer become community reviewer assess incoming packages submitted\nNew Submission\nTracker. following overviews expected community reviewers.","code":""},{"path":"review-expectation.html","id":"review-qualifications","chapter":"25 Review Expectations","heading":"Qualifications","text":"Actively maintaining Bioconductor package","code":""},{"path":"review-expectation.html","id":"review-time-commitment","chapter":"25 Review Expectations","heading":"Time commitment","text":"Package reviews can vary depending quality organization \nsubmitted package. average package review single package \n30 min - 1.5 hour.also plan quarterly “-hands” meeting currently active\nreviewers. meeting acquaint reviewers new\nrequirements, classes, checks activated CRAN BiocCheck, etc. also\nplace raise questions comments larger group perhaps point\nfrequently used comments (perhaps implemented automated\ncheck). Everyone ends slightly different review styles \nbeneficial discuss everyone finds priority. Every effort \nmade attend meetings expect reviewer attend least\nyear.","code":""},{"path":"review-expectation.html","id":"review-assignments","chapter":"25 Review Expectations","heading":"Assignments","text":"Packages assigned evenly randomly, community review\nengagement distributed currently anticipate package assigned \nevery week every 2 weeks. weeks leading Bioconductor\nrelease.‘Additional Package’/‘Circular dependency’ packages submitted occasionally.\nSubmitters allowed submit related packages issue. \noccurs, assigned reviewer responsible reviews \naccept issue packages accepted state.","code":""},{"path":"review-expectation.html","id":"review-expectations-and-deadlines","chapter":"25 Review Expectations","heading":"Expectations and deadlines","text":"Package[s] expected reviewed within 3 weeks assignment \nproducea clean build report build machine. plan make hard\nlimit 3 weeks. delay submitter, issue closed\ninactivity; reopened submitter can commit timely\nupdates engagement review process. delay reviewer,\nreassigned someone else. keep track many\nreassignments occur frequent reassignments (3-4 unexplained) \nremove reviewer person must reapply \nreactivated. Active reviewers expected review least 1 package per\nBioconductor release cycle. Otherwise removed active\nreviewer.","code":""},{"path":"review-expectation.html","id":"review-reassignment-and-temporary-leave","chapter":"25 Review Expectations","heading":"Requesting reassignment and temporary leave of assignment","text":"temporary leave assigning packages needs occur (vacation,\nparticularly busy period time, etc), reviewer reach \npackage review committee administrator. administrator temporarily stop\nassignments can discuss currently assigned packages need re-assignment.slack channel package reviewers ask questions necessary\nask swap/switch/volunteer review packages. Requests can also made \ndirectly contacting package review administrator.Reviewers request reassignment simply lack interest \nlack expertise particular area. review focus ease--use\npackage, documentation, well written code, interoperability. \nreviewer knows particular ‘expert’ field relating submitted\npackage can request someone offer additional comments (including \nofficially part package review list) without explicitly asking \nreassignment.Frequent requests reassignement consider longer leave absence\nagreement package review administrator. frequent requests \nmade reassignement reviewer notified risk \nremoved active review process. reviewer removed, must\nreapply become active reviewer.","code":""},{"path":"review-expectation.html","id":"review-onboarding","chapter":"25 Review Expectations","heading":"On-boarding","text":"New volunteers undergo -boarding process becoming fully active\nreviewers. -boarding process involves least one paired review\ncurrently active reviewing member. Coordination paired review\ncommunicated mentor mentee. recommended practice\nseparate review currently submitted package \ncompare results. currently active member decide another\npaired review necessary review sufficient continue \nsolo reviews.","code":""},{"path":"review-expectation.html","id":"review-recognition","chapter":"25 Review Expectations","heading":"Recognition","text":"Feel free advertise CV resumes Bioconductor reviewer.\nReviewers also listed Community Reviewers Webpage. Reviewers\nmay optionally opt-listed webpage contacting package\nreview administrator. Ideally, plan badges notable achievements\nmilestones, sticker progress.","code":""},{"path":"review-expectation.html","id":"review-volunteer","chapter":"25 Review Expectations","heading":"Volunteer","text":"Refer chapter Volunteer Review details.","code":""},{"path":"reviewtools.html","id":"reviewtools","chapter":"26 Reviewer Resources and Tools","heading":"26 Reviewer Resources and Tools","text":"Reviewers may find following links references useful.","code":""},{"path":"reviewtools.html","id":"review-checklist","chapter":"26 Reviewer Resources and Tools","heading":"Package Review checklist","text":"Reviewers can download template review checklist .checklist can pasted relevant issue New Submission Tracker,\nupdated review progresses.","code":""},{"path":"reviewtools.html","id":"review-example","chapter":"26 Reviewer Resources and Tools","heading":"Example Review","text":"\nReview 2090: HubPub\n\nReview 1229: BiocSet\n\nReview 1659: AnVILBilling\n\nReview 1671: AnVILPublish\n\nReview 311: AnnotationFilter\n\nReview 498: restfulSEData\n\nReview 1270: biscuiteerData/biscuiteer\n","code":""},{"path":"review-volunteer-chapter.html","id":"review-volunteer-chapter","chapter":"27 Volunteer to Review","heading":"27 Volunteer to Review","text":"Anyone Bioconductor community can volunteer become Bioconductor\ncommunity reviewer review incoming packages submitted New\nSubmission\nTracker. Please review\nReviewer Expectations Bioconductor Code \nConduct filling \nvolunteer form.","code":""},{"path":"booknews.html","id":"booknews","chapter":"A NEWS","heading":"A NEWS","text":"","code":""},{"path":"booknews.html","id":"version-1.0.1-2021-08-19","chapter":"A NEWS","heading":"A.1 Version 1.0.1 (2021-08-19)","text":"Add dedicated section package name.","code":""},{"path":"booknews.html","id":"version-1.0.0-2021-06-02","chapter":"A NEWS","heading":"A.2 Version 1.0.0 (2021-06-02)","text":"Initial definition package development guidelines based \nBioconductor package guidelines.","code":""}]
